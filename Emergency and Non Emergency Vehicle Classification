{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"colab":{"name":"Convolutional Neural Network in Keras.ipynb","provenance":[],"collapsed_sections":[]},"accelerator":"GPU","kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":10207517,"sourceType":"datasetVersion","datasetId":6308375},{"sourceId":10207606,"sourceType":"datasetVersion","datasetId":6308443}],"dockerImageVersionId":30806,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Steps to build CNN to solve Emergency vs Non-Emergency vehicle classification problem\n\n1. Loading the Dataset\n2. Pre-processing the Data\n3. Creating Training and Validation set\n4. Defining the Model Architecture\n5. Compiling the Model\n6. Training the Model\n7. Evaluating model performance","metadata":{"id":"IxgcP-B3ejGc","colab_type":"text"}},{"cell_type":"markdown","source":"## 1. Loading the Dataset","metadata":{"id":"hNWck_ZahKLA","colab_type":"text"}},{"cell_type":"code","source":"# import necessary libraries and functions\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# importing layers from keras\nfrom keras.layers import Dense, InputLayer, BatchNormalization, Dropout\nfrom keras.models import Sequential\n# importing adam optimizer from keras optimizer module \nfrom keras.optimizers import Adam\n\n# train_test_split to create training and validation set\nfrom sklearn.model_selection import train_test_split\n# accuracy_score to calculate the accuracy of predictions\nfrom sklearn.metrics import accuracy_score","metadata":{"id":"Kf2C4oSfhKLH","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:17:39.438661Z","iopub.execute_input":"2024-12-17T07:17:39.439023Z","iopub.status.idle":"2024-12-17T07:17:39.445224Z","shell.execute_reply.started":"2024-12-17T07:17:39.438993Z","shell.execute_reply":"2024-12-17T07:17:39.444319Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"# create random number generator\nseed = 42","metadata":{"id":"ZCK0i2SAhKLa","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:17:39.957463Z","iopub.execute_input":"2024-12-17T07:17:39.958229Z","iopub.status.idle":"2024-12-17T07:17:39.961630Z","shell.execute_reply.started":"2024-12-17T07:17:39.958198Z","shell.execute_reply":"2024-12-17T07:17:39.960782Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"from skimage.io import imread,imshow","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:17:40.737409Z","iopub.execute_input":"2024-12-17T07:17:40.738034Z","iopub.status.idle":"2024-12-17T07:17:41.024373Z","shell.execute_reply.started":"2024-12-17T07:17:40.737996Z","shell.execute_reply":"2024-12-17T07:17:41.023575Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"# reading the csv file\ndata = pd.read_csv('/kaggle/input/emergency-classification-csv/emergency_classification.csv')","metadata":{"id":"_MKVrwevhKLk","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:17:41.457613Z","iopub.execute_input":"2024-12-17T07:17:41.458179Z","iopub.status.idle":"2024-12-17T07:17:41.472119Z","shell.execute_reply.started":"2024-12-17T07:17:41.458149Z","shell.execute_reply":"2024-12-17T07:17:41.471323Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"imshow(r\"/kaggle/input/emergency-vehicle-classification-zipped/Neuralnetworkandhyperparametertuninginkeras-200330-192024/Neural network and hyperparameter tuning in keras/Dataset/Dataset/images/1.jpg\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:17:42.117906Z","iopub.execute_input":"2024-12-17T07:17:42.118291Z","iopub.status.idle":"2024-12-17T07:17:42.529234Z","shell.execute_reply.started":"2024-12-17T07:17:42.118263Z","shell.execute_reply":"2024-12-17T07:17:42.528347Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"<matplotlib.image.AxesImage at 0x7bf347ddd4e0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"# load images and store it in numpy array\n\n# empty list to store the images\nX = []\n# iterating over each image\nfor img_name in data.image_names:\n    # loading the image using its name\n    img = plt.imread(r\"/kaggle/input/emergency-vehicle-classification-zipped/Neuralnetworkandhyperparametertuninginkeras-200330-192024/Neural network and hyperparameter tuning in keras/Dataset/Dataset/images/\" + img_name)\n    # saving each image in the list\n    X.append(img)\n    \n# converting the list of images into array\nX=np.array(X)\n\n# storing the target variable in separate variable\ny = data.emergency_or_not.values","metadata":{"id":"OUcBZmDLhKLt","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:17:42.937461Z","iopub.execute_input":"2024-12-17T07:17:42.937786Z","iopub.status.idle":"2024-12-17T07:17:55.003983Z","shell.execute_reply.started":"2024-12-17T07:17:42.937757Z","shell.execute_reply":"2024-12-17T07:17:55.003218Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"# shape of the images\nX.shape","metadata":{"id":"teJk4rIThKL2","colab_type":"code","outputId":"504522ff-f061-48dd-815a-c92c19b5fde7","executionInfo":{"status":"ok","timestamp":1585229944951,"user_tz":-330,"elapsed":3402,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:17:58.973015Z","iopub.execute_input":"2024-12-17T07:17:58.973899Z","iopub.status.idle":"2024-12-17T07:17:58.979367Z","shell.execute_reply.started":"2024-12-17T07:17:58.973863Z","shell.execute_reply":"2024-12-17T07:17:58.978397Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"(2352, 224, 224, 3)"},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"## 2. Pre-processing the Data","metadata":{"id":"nKxqxL45ijJX","colab_type":"text"}},{"cell_type":"code","source":"# since we are using CNN, we do not have to resize the images into 1D array. ","metadata":{"id":"Ei6lZu3JFStn","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:00.558086Z","iopub.execute_input":"2024-12-17T07:18:00.558888Z","iopub.status.idle":"2024-12-17T07:18:00.562393Z","shell.execute_reply.started":"2024-12-17T07:18:00.558851Z","shell.execute_reply":"2024-12-17T07:18:00.561579Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"# normalizing the pixel values\nX = X / X.max()","metadata":{"id":"9HXsTHmJhKL_","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:02.137869Z","iopub.execute_input":"2024-12-17T07:18:02.138257Z","iopub.status.idle":"2024-12-17T07:18:03.037849Z","shell.execute_reply.started":"2024-12-17T07:18:02.138226Z","shell.execute_reply":"2024-12-17T07:18:03.037076Z"}},"outputs":[],"execution_count":11},{"cell_type":"markdown","source":"## 3. Creating Training and Validation set","metadata":{"id":"WDM9Hjsiisyl","colab_type":"text"}},{"cell_type":"code","source":"# creating a training and validation set\nX_train, X_valid, y_train, y_valid=train_test_split(X,y,test_size=0.3, random_state=seed)","metadata":{"id":"JIO9W5ihhKMF","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:04.618109Z","iopub.execute_input":"2024-12-17T07:18:04.618413Z","iopub.status.idle":"2024-12-17T07:18:05.422710Z","shell.execute_reply.started":"2024-12-17T07:18:04.618389Z","shell.execute_reply":"2024-12-17T07:18:05.421994Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"# shape of training and validation set\n(X_train.shape, y_train.shape), (X_valid.shape, y_valid.shape)","metadata":{"id":"66pP0PgXiz5U","colab_type":"code","outputId":"392e292e-5d17-4b2e-eb53-a4a364bcae6f","executionInfo":{"status":"ok","timestamp":1585230060706,"user_tz":-330,"elapsed":648,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:06.307815Z","iopub.execute_input":"2024-12-17T07:18:06.308176Z","iopub.status.idle":"2024-12-17T07:18:06.314101Z","shell.execute_reply.started":"2024-12-17T07:18:06.308145Z","shell.execute_reply":"2024-12-17T07:18:06.313122Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"(((1646, 224, 224, 3), (1646,)), ((706, 224, 224, 3), (706,)))"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"## 4. Defining the Model Architecture","metadata":{"id":"f_HSxXtVhKMO","colab_type":"text"}},{"cell_type":"code","source":"# importing the convolutional and flatten layer from keras\nfrom keras.layers import Conv2D, Flatten","metadata":{"id":"8H-ihteG_y4_","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:16.578336Z","iopub.execute_input":"2024-12-17T07:18:16.579041Z","iopub.status.idle":"2024-12-17T07:18:16.582587Z","shell.execute_reply.started":"2024-12-17T07:18:16.579008Z","shell.execute_reply":"2024-12-17T07:18:16.581698Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"# defining the model architecture\n\n# creating a sequential model \nmodel = Sequential()\n    \n# defining input layer with 3D input of shape (224,224,3)\nmodel.add(InputLayer(shape=(224, 224, 3)))\n\n# defining the first convolutional layer with 25 filters of size (5,5)\nmodel.add(Conv2D(25, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\n# defining the second convolutional layer with 50 filters of size (5,5)\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\n\n# flattening the output from convolutional layers so that it can be forwarded to the dense layers\nmodel.add(Flatten())\n\n# defining the first dense or fully connected layer with 100 neurons\nmodel.add(Dense(units=100, activation='sigmoid'))\n# defining the output layer with 1 neuron since it is a binary classification problem\nmodel.add(Dense(units=1, activation='sigmoid'))","metadata":{"id":"elD4F16q_uRQ","colab_type":"code","outputId":"96fe91d1-81a7-419b-8ce1-b936ba0d2e9d","executionInfo":{"status":"ok","timestamp":1585227647476,"user_tz":-330,"elapsed":13529,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":141},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:18.118276Z","iopub.execute_input":"2024-12-17T07:18:18.119113Z","iopub.status.idle":"2024-12-17T07:18:19.043460Z","shell.execute_reply.started":"2024-12-17T07:18:18.119080Z","shell.execute_reply":"2024-12-17T07:18:19.042786Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"# printing summary of the model\nmodel.summary()","metadata":{"id":"BBwKWQjE_v4j","colab_type":"code","outputId":"e20bf351-8b6e-4c59-b796-06ee7a0148ec","executionInfo":{"status":"ok","timestamp":1585227647477,"user_tz":-330,"elapsed":13515,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":330},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:22.118265Z","iopub.execute_input":"2024-12-17T07:18:22.119053Z","iopub.status.idle":"2024-12-17T07:18:22.137060Z","shell.execute_reply.started":"2024-12-17T07:18:22.119018Z","shell.execute_reply":"2024-12-17T07:18:22.136301Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │         \u001b[38;5;34m1,900\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m31,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten (\u001b[38;5;33mFlatten\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m2332800\u001b[0m)        │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │   \u001b[38;5;34m233,280,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,900</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">31,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2332800</span>)        │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │   <span style=\"color: #00af00; text-decoration-color: #00af00\">233,280,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m233,313,401\u001b[0m (890.02 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">233,313,401</span> (890.02 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m233,313,401\u001b[0m (890.02 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">233,313,401</span> (890.02 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"## Understanding the Architecture\n*  Input shape is (224,224,3) since images are of this shape\n*  We then applied 25 filters each of shape (5,5) and stride is (1,1)\n*  So the output from first convolutional layer is: **(224-5+1,224-5+1,25)** which is **(220,220,25)**\n*  We then applied 50 filters of shape (5,5) each with stride (1,1)\n*  Then the output is **(220-5+1,220-5+1,50)** which is **(216,216,50)**\n*  Then this output is flattened which resulted in 216 X 216 X 50 = 2332800 features\n*  Finally these features are passed through the fully connected layers.\n","metadata":{"id":"l_9WzJ2akEXt","colab_type":"text"}},{"cell_type":"markdown","source":"## Understanding the number of parameters of different layers\n\n1.   First Convolutional Layer\n    * Number of input channels = 3\n    * Number of filters = 25\n    * Filter Size = (5,5)\n    * Learnable parameters = **25 * 5 * 5 * 3 + 25** (1 bias for each filter) = **1900**\n2.   Second Convolutional Layer\n    * Number of input channels = 25\n    * Number of filters = 50\n    * Filter Size = (5,5)\n    * Learnable parameters = **50 * 5 * 5 * 25 + 50** (1 bias for each filter) = **31300**\n3.   First Fully Connected Layer\n    * Number of input features = 216 * 216 * 50 = 2332800\n    * Number of neurons in this hidden layer = 100\n    * Learnable parameters = **2332800 * 100 + 100** (1 bias for each neuron) = **233280100**\n3.   Output Layer\n    * Number of input features = 100\n    * Number of neurons in this layer = 1\n    * Learnable parameters = **100 * 1 + 1** (1 bias for each neuron) = **101**\n\n","metadata":{"id":"cLtyLYpykEUT","colab_type":"text"}},{"cell_type":"markdown","source":"## 5. Compiling the Model","metadata":{"id":"Ih1KTM7MF1-2","colab_type":"text"}},{"cell_type":"code","source":"# compiling the model\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"uXF1_OIWhKMg","colab_type":"code","outputId":"d912f9c2-e3ba-4bbb-e0b3-bdbc1fe8ef9f","executionInfo":{"status":"ok","timestamp":1585227647478,"user_tz":-330,"elapsed":12761,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":159},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:42.798375Z","iopub.execute_input":"2024-12-17T07:18:42.799091Z","iopub.status.idle":"2024-12-17T07:18:42.812415Z","shell.execute_reply.started":"2024-12-17T07:18:42.799057Z","shell.execute_reply":"2024-12-17T07:18:42.811669Z"}},"outputs":[],"execution_count":17},{"cell_type":"markdown","source":"## 6. Training the Model","metadata":{"id":"6L1-5Ik4GC1y","colab_type":"text"}},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"id":"JF4dEvsrhKMo","colab_type":"code","outputId":"fd4b5728-7770-41b8-c762-21976396511e","executionInfo":{"status":"ok","timestamp":1585227901500,"user_tz":-330,"elapsed":266082,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":680},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:18:48.538272Z","iopub.execute_input":"2024-12-17T07:18:48.538959Z","iopub.status.idle":"2024-12-17T07:21:21.118739Z","shell.execute_reply.started":"2024-12-17T07:18:48.538908Z","shell.execute_reply":"2024-12-17T07:21:21.118005Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1734419932.071151      99 service.cc:145] XLA service 0x7bf1580071b0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1734419932.071203      99 service.cc:153]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\nI0000 00:00:1734419932.071207      99 service.cc:153]   StreamExecutor device (1): Tesla T4, Compute Capability 7.5\n2024-12-17 07:19:04.672712: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:04.683099: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.010529558s\nTrying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:06.009223: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[128,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:06.329985: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.320856042s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[128,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:07.980292: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[128,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:11.000100: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 4.019905361s\nTrying algorithm eng0{} for conv (f32[128,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:17.487687: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:17.681542: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.193943806s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:18.681770: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:18.939583: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.257929805s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\nI0000 00:00:1734419967.336424      99 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m12/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 438ms/step - accuracy: 0.5600 - loss: 0.7115","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:19:45.652120: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[110,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:45.903190: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.25117993s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[110,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:47.532187: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[110,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:50.436110: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 3.904015337s\nTrying algorithm eng0{} for conv (f32[110,25,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:56.375769: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:56.484873: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.109286485s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:57.485062: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:19:57.656350: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.171392777s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m86s\u001b[0m 4s/step - accuracy: 0.5616 - loss: 0.7091 - val_accuracy: 0.6643 - val_loss: 0.6410\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 557ms/step - accuracy: 0.6626 - loss: 0.6327 - val_accuracy: 0.6771 - val_loss: 0.6060\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 553ms/step - accuracy: 0.6529 - loss: 0.6287 - val_accuracy: 0.6785 - val_loss: 0.6068\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 542ms/step - accuracy: 0.6945 - loss: 0.5914 - val_accuracy: 0.6473 - val_loss: 0.6329\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 539ms/step - accuracy: 0.6931 - loss: 0.5768 - val_accuracy: 0.6997 - val_loss: 0.5795\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 539ms/step - accuracy: 0.7086 - loss: 0.5706 - val_accuracy: 0.6728 - val_loss: 0.5925\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 538ms/step - accuracy: 0.7034 - loss: 0.5712 - val_accuracy: 0.6501 - val_loss: 0.6318\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 540ms/step - accuracy: 0.7200 - loss: 0.5668 - val_accuracy: 0.6983 - val_loss: 0.5647\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 544ms/step - accuracy: 0.7419 - loss: 0.5244 - val_accuracy: 0.7068 - val_loss: 0.5607\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 549ms/step - accuracy: 0.7443 - loss: 0.5301 - val_accuracy: 0.7139 - val_loss: 0.5488\n","output_type":"stream"}],"execution_count":18},{"cell_type":"markdown","source":"## 7. Evaluating model performance","metadata":{"id":"wmOIR4_PHKFE","colab_type":"text"}},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"id":"4VqAxVzGGXk9","colab_type":"code","outputId":"7581451c-b624-4e2e-8702-e351e8bac56f","executionInfo":{"status":"ok","timestamp":1585227907392,"user_tz":-330,"elapsed":270882,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:22:02.438400Z","iopub.execute_input":"2024-12-17T07:22:02.438761Z","iopub.status.idle":"2024-12-17T07:22:07.441425Z","shell.execute_reply.started":"2024-12-17T07:22:02.438730Z","shell.execute_reply":"2024-12-17T07:22:07.440426Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 40ms/step\nAccuracy on training set: 0.7630619684082625 %\n","output_type":"stream"}],"execution_count":20},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"id":"HG13Xm6bGXQg","colab_type":"code","outputId":"f6af5e11-f340-43df-cc88-08ed728239a1","executionInfo":{"status":"ok","timestamp":1585227910434,"user_tz":-330,"elapsed":273619,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:22:07.443164Z","iopub.execute_input":"2024-12-17T07:22:07.443861Z","iopub.status.idle":"2024-12-17T07:22:11.794798Z","shell.execute_reply.started":"2024-12-17T07:22:07.443816Z","shell.execute_reply":"2024-12-17T07:22:11.793878Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 137ms/step\nAccuracy on validation set: 0.7138810198300283 %\n","output_type":"stream"}],"execution_count":21},{"cell_type":"code","source":"# summarize history for loss\nplt.plot(model_history.history['loss'])\nplt.plot(model_history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'validation'], loc='upper left')\nplt.show()","metadata":{"id":"jKrOiGaDGXLK","colab_type":"code","outputId":"930405b8-d430-4cc2-bbc8-b8c3d42746c8","executionInfo":{"status":"ok","timestamp":1585227910438,"user_tz":-330,"elapsed":273064,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":295},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:22:17.158598Z","iopub.execute_input":"2024-12-17T07:22:17.159266Z","iopub.status.idle":"2024-12-17T07:22:17.409137Z","shell.execute_reply.started":"2024-12-17T07:22:17.159230Z","shell.execute_reply":"2024-12-17T07:22:17.408340Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":22},{"cell_type":"code","source":"# summarize history for accuracy\nplt.plot(model_history.history['accuracy'])\nplt.plot(model_history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'validation'], loc='upper left')\nplt.show()","metadata":{"id":"VNAd2anFHqjn","colab_type":"code","outputId":"3e8dc07b-fed6-4374-be90-113aa52dfc00","executionInfo":{"status":"ok","timestamp":1585227910440,"user_tz":-330,"elapsed":271578,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":295},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:22:25.038212Z","iopub.execute_input":"2024-12-17T07:22:25.039035Z","iopub.status.idle":"2024-12-17T07:22:25.220199Z","shell.execute_reply.started":"2024-12-17T07:22:25.038993Z","shell.execute_reply":"2024-12-17T07:22:25.219344Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":23},{"cell_type":"markdown","source":"## Adding Maxpool layer to reduce parameters","metadata":{"id":"Hd7JfLeiHtX2","colab_type":"text"}},{"cell_type":"code","source":"# importing maxpool layer from keras\nfrom keras.layers import MaxPool2D","metadata":{"id":"hxymlVBrIOQu","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:22:35.118218Z","iopub.execute_input":"2024-12-17T07:22:35.118891Z","iopub.status.idle":"2024-12-17T07:22:35.122779Z","shell.execute_reply.started":"2024-12-17T07:22:35.118859Z","shell.execute_reply":"2024-12-17T07:22:35.121754Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"# defining the model architecture with maxpool layer\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(25, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\n# adding maxpool layer after the convolutional layers\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\n# compiling the model\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"ouFTqkMuhKMw","colab_type":"code","outputId":"93ed9f2f-cc08-4ae6-89da-c87fc0ffec89","executionInfo":{"status":"ok","timestamp":1585227910842,"user_tz":-330,"elapsed":270388,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":72},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:22:47.418925Z","iopub.execute_input":"2024-12-17T07:22:47.419301Z","iopub.status.idle":"2024-12-17T07:22:47.478767Z","shell.execute_reply.started":"2024-12-17T07:22:47.419272Z","shell.execute_reply":"2024-12-17T07:22:47.477553Z"}},"outputs":[],"execution_count":26},{"cell_type":"code","source":"# summary of the model\nmodel.summary()","metadata":{"id":"8WRfKOU_hKM4","colab_type":"code","outputId":"b5bcc2a9-b5c6-44fe-ecd4-fec2d91b8800","executionInfo":{"status":"ok","timestamp":1585227910845,"user_tz":-330,"elapsed":270101,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":364},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:22:50.528099Z","iopub.execute_input":"2024-12-17T07:22:50.528481Z","iopub.status.idle":"2024-12-17T07:22:50.549462Z","shell.execute_reply.started":"2024-12-17T07:22:50.528448Z","shell.execute_reply":"2024-12-17T07:22:50.548485Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_2\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_2\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_4 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │         \u001b[38;5;34m1,900\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_5 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m31,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m54\u001b[0m, \u001b[38;5;34m54\u001b[0m, \u001b[38;5;34m50\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_2 (\u001b[38;5;33mFlatten\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m145800\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │    \u001b[38;5;34m14,580,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,900</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">31,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">54</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">54</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">145800</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │    <span style=\"color: #00af00; text-decoration-color: #00af00\">14,580,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m14,613,401\u001b[0m (55.75 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">14,613,401</span> (55.75 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m14,613,401\u001b[0m (55.75 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">14,613,401</span> (55.75 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":27},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"id":"F5ZLlBqQhKM9","colab_type":"code","outputId":"2078c591-cece-48ce-c464-80ee82621fdf","executionInfo":{"status":"ok","timestamp":1585228052942,"user_tz":-330,"elapsed":411283,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":382},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:23:03.118182Z","iopub.execute_input":"2024-12-17T07:23:03.118975Z","iopub.status.idle":"2024-12-17T07:24:05.395814Z","shell.execute_reply.started":"2024-12-17T07:23:03.118929Z","shell.execute_reply":"2024-12-17T07:24:05.395130Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 648ms/step - accuracy: 0.5905 - loss: 0.6756 - val_accuracy: 0.5609 - val_loss: 0.6776\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 436ms/step - accuracy: 0.5923 - loss: 0.6678 - val_accuracy: 0.5609 - val_loss: 0.6705\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 442ms/step - accuracy: 0.6011 - loss: 0.6588 - val_accuracy: 0.6091 - val_loss: 0.6614\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 437ms/step - accuracy: 0.6089 - loss: 0.6582 - val_accuracy: 0.5623 - val_loss: 0.6571\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 424ms/step - accuracy: 0.6054 - loss: 0.6544 - val_accuracy: 0.6119 - val_loss: 0.6439\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 416ms/step - accuracy: 0.6364 - loss: 0.6424 - val_accuracy: 0.6941 - val_loss: 0.6321\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 411ms/step - accuracy: 0.6562 - loss: 0.6331 - val_accuracy: 0.6360 - val_loss: 0.6445\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 407ms/step - accuracy: 0.6415 - loss: 0.6360 - val_accuracy: 0.6926 - val_loss: 0.6089\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 405ms/step - accuracy: 0.6738 - loss: 0.6194 - val_accuracy: 0.7011 - val_loss: 0.5973\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 403ms/step - accuracy: 0.7059 - loss: 0.6000 - val_accuracy: 0.7054 - val_loss: 0.5910\n","output_type":"stream"}],"execution_count":28},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"SoCap-6hKJkR","outputId":"aa1a8368-6b5c-48ad-9b1e-f38adb792791","executionInfo":{"status":"error","timestamp":1585230286579,"user_tz":-330,"elapsed":1551,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":167},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:24:12.638093Z","iopub.execute_input":"2024-12-17T07:24:12.638434Z","iopub.status.idle":"2024-12-17T07:24:17.686828Z","shell.execute_reply.started":"2024-12-17T07:24:12.638403Z","shell.execute_reply":"2024-12-17T07:24:17.685996Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 32ms/step\nAccuracy on training set: 0.7132442284325637 %\n","output_type":"stream"}],"execution_count":29},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"f9Zj4GZpKJk0","outputId":"4847f67b-7b5c-44a4-c847-846bb8fd8c82","executionInfo":{"status":"error","timestamp":1585230286584,"user_tz":-330,"elapsed":1536,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":167},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:24:21.237856Z","iopub.execute_input":"2024-12-17T07:24:21.238677Z","iopub.status.idle":"2024-12-17T07:24:23.442155Z","shell.execute_reply.started":"2024-12-17T07:24:21.238646Z","shell.execute_reply":"2024-12-17T07:24:23.440886Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 40ms/step\nAccuracy on validation set: 0.7053824362606232 %\n","output_type":"stream"}],"execution_count":30},{"cell_type":"code","source":"# summarize history for loss\nplt.plot(model_history.history['loss'])\nplt.plot(model_history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'validation'], loc='upper left')\nplt.show()","metadata":{"colab_type":"code","id":"vYMP4z8FKJlK","outputId":"5de93518-f2a0-4373-cd50-fb5105c333c0","executionInfo":{"status":"ok","timestamp":1585228060182,"user_tz":-330,"elapsed":417007,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":295},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:24:27.543354Z","iopub.execute_input":"2024-12-17T07:24:27.544035Z","iopub.status.idle":"2024-12-17T07:24:27.770768Z","shell.execute_reply.started":"2024-12-17T07:24:27.543994Z","shell.execute_reply":"2024-12-17T07:24:27.769937Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":31},{"cell_type":"code","source":"# summarize history for accuracy\nplt.plot(model_history.history['accuracy'])\nplt.plot(model_history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'validation'], loc='upper left')\nplt.show()","metadata":{"colab_type":"code","id":"CGUdACeiKJle","outputId":"2dc082d0-da24-4108-9b2b-a5f3750a14ed","executionInfo":{"status":"ok","timestamp":1585228060184,"user_tz":-330,"elapsed":416544,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":295},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:24:34.058658Z","iopub.execute_input":"2024-12-17T07:24:34.059019Z","iopub.status.idle":"2024-12-17T07:24:34.235198Z","shell.execute_reply.started":"2024-12-17T07:24:34.058983Z","shell.execute_reply":"2024-12-17T07:24:34.234335Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":32},{"cell_type":"markdown","source":"## Hyperparameter Tuning of Convolutional Neural Networks\n\n1. increase number of convolutional layers\n2. increase number of pooling layers\n3. increase number of convolutional filters\n4. change size of convolutional filters\n5. change pooling type \n6. change padding technique\n7. change stride\n\n#### Hyperparameters of fully connected layers\n\n1. change activation function of hidden layer\n2. increase hidden neurons\n3. increase hidden layers\n4. increase number of epochs\n5. change optimizer\n6. add batch normalization layer\n7. add dropout layer","metadata":{"id":"eobCjMm_hKNd","colab_type":"text"}},{"cell_type":"markdown","source":"## 1. Increasing number of convolutional layers","metadata":{"id":"qG9SHyVzLfeA","colab_type":"text"}},{"cell_type":"code","source":"# increase number of convolutional layers\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(25, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"rLe_T2IxhKNl","colab_type":"code","outputId":"20b88b67-1ab3-49ed-99f4-65c209afa1f3","executionInfo":{"status":"ok","timestamp":1585230324852,"user_tz":-330,"elapsed":1588,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":298},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:25:31.213605Z","iopub.execute_input":"2024-12-17T07:25:31.213956Z","iopub.status.idle":"2024-12-17T07:25:31.279677Z","shell.execute_reply.started":"2024-12-17T07:25:31.213910Z","shell.execute_reply":"2024-12-17T07:25:31.278734Z"}},"outputs":[],"execution_count":34},{"cell_type":"code","source":"model.summary()","metadata":{"id":"U1arli-EhKNq","colab_type":"code","outputId":"910850a8-f5e1-4b79-8376-eba226afbf33","executionInfo":{"status":"ok","timestamp":1585230324855,"user_tz":-330,"elapsed":1367,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":399},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:25:37.017997Z","iopub.execute_input":"2024-12-17T07:25:37.018824Z","iopub.status.idle":"2024-12-17T07:25:37.036784Z","shell.execute_reply.started":"2024-12-17T07:25:37.018787Z","shell.execute_reply":"2024-12-17T07:25:37.035767Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_4\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_4\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_9 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │         \u001b[38;5;34m1,900\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_10 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m31,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_11 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m212\u001b[0m, \u001b[38;5;34m212\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m62,550\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_3 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m53\u001b[0m, \u001b[38;5;34m53\u001b[0m, \u001b[38;5;34m50\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_4 (\u001b[38;5;33mFlatten\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m140450\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_8 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │    \u001b[38;5;34m14,045,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,900</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">31,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">212</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">212</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">62,550</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">53</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">53</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">140450</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │    <span style=\"color: #00af00; text-decoration-color: #00af00\">14,045,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m14,140,951\u001b[0m (53.94 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">14,140,951</span> (53.94 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m14,140,951\u001b[0m (53.94 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">14,140,951</span> (53.94 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"id":"eaoHuj0ohKNy","colab_type":"code","outputId":"dcccb26a-8ad1-41be-d071-9d02ebfffdf9","executionInfo":{"status":"ok","timestamp":1585229255919,"user_tz":-330,"elapsed":316822,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":382},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:26:09.273283Z","iopub.execute_input":"2024-12-17T07:26:09.273597Z","iopub.status.idle":"2024-12-17T07:29:17.161681Z","shell.execute_reply.started":"2024-12-17T07:26:09.273571Z","shell.execute_reply":"2024-12-17T07:29:17.160955Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:26:19.817494: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k4=1,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:19.890765: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.0733894s\nTrying algorithm eng20{k2=0,k4=1,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:20.890959: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=3,k3=0} for conv (f32[128,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:21.346137: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.455286384s\nTrying algorithm eng11{k2=3,k3=0} for conv (f32[128,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:22.346391: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng35{k2=4,k3=0} for conv (f32[128,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:22.781767: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.435539556s\nTrying algorithm eng35{k2=4,k3=0} for conv (f32[128,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:25.013001: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:25.177635: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.164759093s\nTrying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:26.177856: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=0,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:26.538190: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.360463191s\nTrying algorithm eng25{k2=0,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:27.538396: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=1,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:28.028203: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.489919042s\nTrying algorithm eng25{k2=1,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:29.028412: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=2,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:29.719666: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.691359532s\nTrying algorithm eng25{k2=2,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:30.719864: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:32.363073: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.643293305s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:35.838495: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:36.708898: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.870502875s\nTrying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:37.709102: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:38.524817: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.81581352s\nTrying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:39.525018: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:39.769653: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.244737839s\nTrying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:40.769850: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:42.280255: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.510505514s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:43.280477: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:44.889070: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.60871053s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:45.889300: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:46.419372: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.530198568s\nTrying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:47.419595: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:47.771137: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.351661399s\nTrying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:48.771345: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:49.362169: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.590926316s\nTrying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:50.362376: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:26:50.907698: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.545427357s\nTrying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[128,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m12/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 704ms/step - accuracy: 0.4977 - loss: 0.7910","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:27:07.073063: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=3,k3=0} for conv (f32[110,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:07.262667: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.189718577s\nTrying algorithm eng11{k2=3,k3=0} for conv (f32[110,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:08.262874: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng35{k2=4,k3=0} for conv (f32[110,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:08.423668: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.160907327s\nTrying algorithm eng35{k2=4,k3=0} for conv (f32[110,50,212,212]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:11.749048: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=0,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:11.848864: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.099922371s\nTrying algorithm eng25{k2=0,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:12.849064: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=1,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:13.042858: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.193907824s\nTrying algorithm eng25{k2=1,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:14.043075: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=2,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:14.297882: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.254923945s\nTrying algorithm eng25{k2=2,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:15.298100: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:16.406597: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.108609996s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,212,212]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:19.026075: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:19.527549: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.50156854s\nTrying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:20.527750: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:20.993204: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.465560842s\nTrying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:22.947963: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:23.995203: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.047352493s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:24.995399: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:26.136802: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.141507117s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:27.136996: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:27.389585: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.252691925s\nTrying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:28.389784: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:28.515089: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.12541695s\nTrying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:29.515273: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:29.850770: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.335598673s\nTrying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:30.850974: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:27:31.160217: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.309350828s\nTrying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[110,50,212,212]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m89s\u001b[0m 4s/step - accuracy: 0.5036 - loss: 0.7810 - val_accuracy: 0.5439 - val_loss: 0.6908\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 814ms/step - accuracy: 0.5758 - loss: 0.6761 - val_accuracy: 0.5751 - val_loss: 0.6702\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 825ms/step - accuracy: 0.5926 - loss: 0.6645 - val_accuracy: 0.6034 - val_loss: 0.6549\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 830ms/step - accuracy: 0.6081 - loss: 0.6529 - val_accuracy: 0.6331 - val_loss: 0.6404\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 830ms/step - accuracy: 0.6431 - loss: 0.6386 - val_accuracy: 0.6402 - val_loss: 0.6310\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 823ms/step - accuracy: 0.6251 - loss: 0.6436 - val_accuracy: 0.6402 - val_loss: 0.6405\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 819ms/step - accuracy: 0.6452 - loss: 0.6308 - val_accuracy: 0.6459 - val_loss: 0.6212\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 815ms/step - accuracy: 0.6568 - loss: 0.6186 - val_accuracy: 0.6615 - val_loss: 0.6217\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 817ms/step - accuracy: 0.6550 - loss: 0.6177 - val_accuracy: 0.6643 - val_loss: 0.6068\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 820ms/step - accuracy: 0.6638 - loss: 0.6215 - val_accuracy: 0.6643 - val_loss: 0.6237\n","output_type":"stream"}],"execution_count":36},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"id":"27w1voVdNf-N","colab_type":"code","outputId":"c0f6a114-3a90-43e8-a621-067fbe475019","executionInfo":{"status":"ok","timestamp":1585229271142,"user_tz":-330,"elapsed":9659,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:30:04.358258Z","iopub.execute_input":"2024-12-17T07:30:04.358858Z","iopub.status.idle":"2024-12-17T07:30:15.282777Z","shell.execute_reply.started":"2024-12-17T07:30:04.358826Z","shell.execute_reply":"2024-12-17T07:30:15.281834Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 87ms/step\nAccuracy on training set: 0.6585662211421628 %\n","output_type":"stream"}],"execution_count":38},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"id":"v7FsoJJPNf51","colab_type":"code","outputId":"bdaed347-0fbf-437c-cc00-d6f88a4e6a02","executionInfo":{"status":"ok","timestamp":1585229274100,"user_tz":-330,"elapsed":11672,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:30:35.719405Z","iopub.execute_input":"2024-12-17T07:30:35.719855Z","iopub.status.idle":"2024-12-17T07:30:39.009090Z","shell.execute_reply.started":"2024-12-17T07:30:35.719805Z","shell.execute_reply":"2024-12-17T07:30:39.008013Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 89ms/step\nAccuracy on validation set: 0.6643059490084986 %\n","output_type":"stream"}],"execution_count":39},{"cell_type":"markdown","source":"## 2. Increasing number of pooling layers","metadata":{"id":"EohJWvwLL2kk","colab_type":"text"}},{"cell_type":"code","source":"# increase number of pooling layers\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(25, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"l5BHQGyCNFTB","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:31:00.434041Z","iopub.execute_input":"2024-12-17T07:31:00.434384Z","iopub.status.idle":"2024-12-17T07:31:00.505087Z","shell.execute_reply.started":"2024-12-17T07:31:00.434356Z","shell.execute_reply":"2024-12-17T07:31:00.504141Z"}},"outputs":[],"execution_count":40},{"cell_type":"code","source":"model.summary()","metadata":{"id":"2M42qtGdNFQb","colab_type":"code","outputId":"82b9cbbf-06a5-40d6-e8c9-9e79ecd1676f","executionInfo":{"status":"ok","timestamp":1585230332097,"user_tz":-330,"elapsed":1086,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":399},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:31:02.217880Z","iopub.execute_input":"2024-12-17T07:31:02.218216Z","iopub.status.idle":"2024-12-17T07:31:02.237331Z","shell.execute_reply.started":"2024-12-17T07:31:02.218189Z","shell.execute_reply":"2024-12-17T07:31:02.236620Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_5\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_5\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_12 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │         \u001b[38;5;34m1,900\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_4 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m55\u001b[0m, \u001b[38;5;34m55\u001b[0m, \u001b[38;5;34m25\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_13 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m51\u001b[0m, \u001b[38;5;34m51\u001b[0m, \u001b[38;5;34m50\u001b[0m)     │        \u001b[38;5;34m31,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_5 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m12\u001b[0m, \u001b[38;5;34m12\u001b[0m, \u001b[38;5;34m50\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_5 (\u001b[38;5;33mFlatten\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7200\u001b[0m)           │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_10 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │       \u001b[38;5;34m720,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_11 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_12 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,900</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">55</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">55</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_13 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">51</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">51</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)     │        <span style=\"color: #00af00; text-decoration-color: #00af00\">31,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7200</span>)           │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │       <span style=\"color: #00af00; text-decoration-color: #00af00\">720,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m753,401\u001b[0m (2.87 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">753,401</span> (2.87 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m753,401\u001b[0m (2.87 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">753,401</span> (2.87 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":41},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"id":"u_XrOnOZNFNh","colab_type":"code","outputId":"e35f95cb-d830-4d1a-e3b7-f9ffbdaf455d","executionInfo":{"status":"ok","timestamp":1585229423179,"user_tz":-330,"elapsed":42638,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":382},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:31:47.038542Z","iopub.execute_input":"2024-12-17T07:31:47.039367Z","iopub.status.idle":"2024-12-17T07:32:13.946892Z","shell.execute_reply.started":"2024-12-17T07:31:47.039333Z","shell.execute_reply":"2024-12-17T07:32:13.946164Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 512ms/step - accuracy: 0.5714 - loss: 0.6980 - val_accuracy: 0.5609 - val_loss: 0.6867\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 114ms/step - accuracy: 0.5888 - loss: 0.6736 - val_accuracy: 0.5609 - val_loss: 0.6816\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 113ms/step - accuracy: 0.5919 - loss: 0.6711 - val_accuracy: 0.5609 - val_loss: 0.6794\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 113ms/step - accuracy: 0.5831 - loss: 0.6730 - val_accuracy: 0.5609 - val_loss: 0.6781\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 115ms/step - accuracy: 0.5857 - loss: 0.6701 - val_accuracy: 0.5609 - val_loss: 0.6772\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 113ms/step - accuracy: 0.6036 - loss: 0.6623 - val_accuracy: 0.5609 - val_loss: 0.6737\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 114ms/step - accuracy: 0.5840 - loss: 0.6674 - val_accuracy: 0.5609 - val_loss: 0.6732\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 118ms/step - accuracy: 0.5867 - loss: 0.6658 - val_accuracy: 0.5609 - val_loss: 0.6710\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 113ms/step - accuracy: 0.5739 - loss: 0.6685 - val_accuracy: 0.5609 - val_loss: 0.6716\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 112ms/step - accuracy: 0.5796 - loss: 0.6639 - val_accuracy: 0.5609 - val_loss: 0.6683\n","output_type":"stream"}],"execution_count":42},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"V5IT6yKfNnwR","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:32:13.948501Z","iopub.execute_input":"2024-12-17T07:32:13.948739Z","iopub.status.idle":"2024-12-17T07:32:18.074917Z","shell.execute_reply.started":"2024-12-17T07:32:13.948717Z","shell.execute_reply":"2024-12-17T07:32:18.073997Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step\nAccuracy on training set: 0.586269744835966 %\n","output_type":"stream"}],"execution_count":43},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"sxg_PHhONnw_","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:32:35.698599Z","iopub.execute_input":"2024-12-17T07:32:35.699415Z","iopub.status.idle":"2024-12-17T07:32:37.722570Z","shell.execute_reply.started":"2024-12-17T07:32:35.699378Z","shell.execute_reply":"2024-12-17T07:32:37.721661Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 21ms/step\nAccuracy on validation set: 0.5609065155807366 %\n","output_type":"stream"}],"execution_count":44},{"cell_type":"code","source":"#Additional pooling layers reduces the trainable paramters leading to under fitting","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:34:11.538180Z","iopub.execute_input":"2024-12-17T07:34:11.538867Z","iopub.status.idle":"2024-12-17T07:34:11.542405Z","shell.execute_reply.started":"2024-12-17T07:34:11.538833Z","shell.execute_reply":"2024-12-17T07:34:11.541514Z"}},"outputs":[],"execution_count":45},{"cell_type":"markdown","source":"## 3. Increasing number of convolutional filters","metadata":{"id":"570Net31NpiN","colab_type":"text"}},{"cell_type":"code","source":"# increase number of convolutional filters\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(Conv2D(75, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"8jwO0VbKhKN9","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:34:21.157727Z","iopub.execute_input":"2024-12-17T07:34:21.158110Z","iopub.status.idle":"2024-12-17T07:34:21.213625Z","shell.execute_reply.started":"2024-12-17T07:34:21.158078Z","shell.execute_reply":"2024-12-17T07:34:21.212920Z"}},"outputs":[],"execution_count":46},{"cell_type":"code","source":"model.summary()","metadata":{"id":"nH2_XQPHN562","colab_type":"code","outputId":"db3c1601-58d2-489e-a5e1-c00545f9addf","executionInfo":{"status":"ok","timestamp":1585230382615,"user_tz":-330,"elapsed":898,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":364},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:34:23.737861Z","iopub.execute_input":"2024-12-17T07:34:23.738199Z","iopub.status.idle":"2024-12-17T07:34:23.755177Z","shell.execute_reply.started":"2024-12-17T07:34:23.738172Z","shell.execute_reply":"2024-12-17T07:34:23.754204Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_6\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_6\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_14 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │         \u001b[38;5;34m3,800\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_15 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m75\u001b[0m)   │        \u001b[38;5;34m93,825\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_6 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m54\u001b[0m, \u001b[38;5;34m54\u001b[0m, \u001b[38;5;34m75\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_6 (\u001b[38;5;33mFlatten\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m218700\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_12 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │    \u001b[38;5;34m21,870,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_13 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_14 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">3,800</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_15 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">75</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">93,825</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">54</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">54</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">75</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">218700</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_12 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │    <span style=\"color: #00af00; text-decoration-color: #00af00\">21,870,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_13 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m21,967,826\u001b[0m (83.80 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">21,967,826</span> (83.80 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m21,967,826\u001b[0m (83.80 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">21,967,826</span> (83.80 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":47},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"colab_type":"code","id":"FPAQ7FBhN_sf","outputId":"a061f366-d77b-4aa6-9c75-35bc7379c985","executionInfo":{"status":"ok","timestamp":1585230768978,"user_tz":-330,"elapsed":325442,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":471},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:36:00.298231Z","iopub.execute_input":"2024-12-17T07:36:00.298573Z","iopub.status.idle":"2024-12-17T07:39:41.325878Z","shell.execute_reply.started":"2024-12-17T07:36:00.298543Z","shell.execute_reply":"2024-12-17T07:39:41.325092Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:36:07.941037: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k4=1,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:08.142594: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.201676236s\nTrying algorithm eng20{k2=0,k4=1,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:09.142803: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=1,k4=3,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:09.483142: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.340437127s\nTrying algorithm eng20{k2=1,k4=3,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:10.483346: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng18{k2=1,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:10.910601: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.42735081s\nTrying algorithm eng18{k2=1,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:11.910824: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k4=1,k5=0,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:12.249697: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.338985649s\nTrying algorithm eng20{k2=2,k4=1,k5=0,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:13.249929: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng18{k2=2,k4=1,k5=0,k6=0,k7=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:13.598163: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.348346271s\nTrying algorithm eng18{k2=2,k4=1,k5=0,k6=0,k7=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:14.598365: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng18{k2=2,k4=2,k5=0,k6=0,k7=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:15.031749: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.433477992s\nTrying algorithm eng18{k2=2,k4=2,k5=0,k6=0,k7=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:16.031993: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k4=2,k5=0,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:16.478958: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.447089038s\nTrying algorithm eng20{k2=2,k4=2,k5=0,k6=0,k7=0,k19=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:17.479142: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=2,k3=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:18.559445: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.080396453s\nTrying algorithm eng11{k2=2,k3=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:19.559634: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=3,k3=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:20.952618: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.393072656s\nTrying algorithm eng11{k2=3,k3=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:21.952855: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng35{k2=4,k3=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:23.253587: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.300826217s\nTrying algorithm eng35{k2=4,k3=0} for conv (f32[128,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:26.604126: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:27.392178: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.788160296s\nTrying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:28.392365: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=0,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:29.035956: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.643660066s\nTrying algorithm eng25{k2=0,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:30.036175: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:30.821379: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.78530716s\nTrying algorithm eng25{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:31.821574: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=2,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:32.850367: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.028884756s\nTrying algorithm eng25{k2=2,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:33.850578: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:36.337710: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 3.487240101s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:41.053325: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng21{k2=1,k4=3,k5=1,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:41.496134: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.442904971s\nTrying algorithm eng21{k2=1,k4=3,k5=1,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:43.159792: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:44.140746: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.981074917s\nTrying algorithm eng1{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:45.140967: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:46.081614: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.940769865s\nTrying algorithm eng20{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:47.081824: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:47.984380: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.902660863s\nTrying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:48.984580: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:50.583149: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.598671125s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:51.583351: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:53.298232: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.714984546s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:54.298458: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:55.464936: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.16659773s\nTrying algorithm eng1{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:56.465152: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:57.510013: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.044963102s\nTrying algorithm eng20{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:58.510222: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:36:59.938611: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.42849989s\nTrying algorithm eng1{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:00.938802: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:02.342304: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.403601284s\nTrying algorithm eng20{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m12/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 607ms/step - accuracy: 0.5814 - loss: 0.6779","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:37:15.048008: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=1,k4=3,k5=1,k6=0,k7=0,k19=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:15.117063: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.069180999s\nTrying algorithm eng20{k2=1,k4=3,k5=1,k6=0,k7=0,k19=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:16.117273: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng18{k2=1,k4=2,k5=1,k6=0,k7=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:16.245746: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.128577579s\nTrying algorithm eng18{k2=1,k4=2,k5=1,k6=0,k7=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:17.245996: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k4=1,k5=0,k6=0,k7=0,k19=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:17.269869: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.024005858s\nTrying algorithm eng20{k2=2,k4=1,k5=0,k6=0,k7=0,k19=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:18.270070: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng18{k2=2,k4=1,k5=0,k6=0,k7=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:18.294731: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.024760069s\nTrying algorithm eng18{k2=2,k4=1,k5=0,k6=0,k7=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:19.294926: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng18{k2=2,k4=2,k5=0,k6=0,k7=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:19.379320: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.084490766s\nTrying algorithm eng18{k2=2,k4=2,k5=0,k6=0,k7=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:20.379544: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k4=2,k5=0,k6=0,k7=0,k19=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:20.464881: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.085445973s\nTrying algorithm eng20{k2=2,k4=2,k5=0,k6=0,k7=0,k19=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:21.465076: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=2,k3=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:22.110974: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.645997832s\nTrying algorithm eng11{k2=2,k3=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:23.111173: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=3,k3=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:23.991103: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.880024531s\nTrying algorithm eng11{k2=3,k3=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:24.991294: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng35{k2=4,k3=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:25.838679: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.847477462s\nTrying algorithm eng35{k2=4,k3=0} for conv (f32[110,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:28.736109: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:29.205795: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.469777454s\nTrying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:30.206003: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=0,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:30.523328: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.317443155s\nTrying algorithm eng25{k2=0,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:31.523516: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:31.974783: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.451358647s\nTrying algorithm eng25{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:32.974993: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=2,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:33.658906: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.684024322s\nTrying algorithm eng25{k2=2,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:34.659103: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:36.630692: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.971683226s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,75,216,216]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:40.868676: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng21{k2=1,k4=3,k5=1,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:41.154827: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.28624882s\nTrying algorithm eng21{k2=1,k4=3,k5=1,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:42.767840: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:43.526482: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.75873874s\nTrying algorithm eng1{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:44.526684: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:45.248464: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.721877702s\nTrying algorithm eng20{k2=0,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:46.248668: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:46.993705: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.745138897s\nTrying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:47.993898: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:49.311125: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.317320304s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:50.311328: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:51.731989: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.420758806s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:52.732193: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:53.645884: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.913800211s\nTrying algorithm eng1{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:54.646080: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:55.484100: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.838116755s\nTrying algorithm eng20{k2=8,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:56.484296: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:57.644334: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.160140449s\nTrying algorithm eng1{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:58.644530: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:37:59.779735: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.135308167s\nTrying algorithm eng20{k2=6,k3=0} for conv (f32[75,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,75,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5s/step - accuracy: 0.5818 - loss: 0.6775   ","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:38:12.408231: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=2,k3=0} for conv (f32[66,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[66,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:38:12.410647: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.002526335s\nTrying algorithm eng11{k2=2,k3=0} for conv (f32[66,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[66,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:38:13.410833: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=3,k3=0} for conv (f32[66,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[66,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:38:13.547238: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.13651457s\nTrying algorithm eng11{k2=3,k3=0} for conv (f32[66,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[66,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:38:14.547422: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng35{k2=4,k3=0} for conv (f32[66,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[66,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:38:14.661857: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.114526035s\nTrying algorithm eng35{k2=4,k3=0} for conv (f32[66,75,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[66,50,220,220]{3,2,1,0}, f32[75,50,5,5]{3,2,1,0}, f32[75]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m132s\u001b[0m 6s/step - accuracy: 0.5821 - loss: 0.6773 - val_accuracy: 0.5609 - val_loss: 0.6720\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 720ms/step - accuracy: 0.6046 - loss: 0.6613 - val_accuracy: 0.5609 - val_loss: 0.6655\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 717ms/step - accuracy: 0.5960 - loss: 0.6571 - val_accuracy: 0.6048 - val_loss: 0.6463\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 721ms/step - accuracy: 0.6352 - loss: 0.6398 - val_accuracy: 0.6558 - val_loss: 0.6314\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 729ms/step - accuracy: 0.6660 - loss: 0.6282 - val_accuracy: 0.6629 - val_loss: 0.6197\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 739ms/step - accuracy: 0.6665 - loss: 0.6126 - val_accuracy: 0.7040 - val_loss: 0.6051\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 745ms/step - accuracy: 0.6869 - loss: 0.6134 - val_accuracy: 0.6898 - val_loss: 0.5995\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 750ms/step - accuracy: 0.6922 - loss: 0.5990 - val_accuracy: 0.7139 - val_loss: 0.5871\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 743ms/step - accuracy: 0.7126 - loss: 0.5844 - val_accuracy: 0.6572 - val_loss: 0.6069\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 743ms/step - accuracy: 0.6935 - loss: 0.5887 - val_accuracy: 0.7110 - val_loss: 0.5749\n","output_type":"stream"}],"execution_count":48},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"9U-22outN_tC","outputId":"5ffea612-ecef-46f8-9460-2d42b8b8a24b","executionInfo":{"status":"ok","timestamp":1585230794961,"user_tz":-330,"elapsed":9947,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:39:41.327937Z","iopub.execute_input":"2024-12-17T07:39:41.328399Z","iopub.status.idle":"2024-12-17T07:39:57.038772Z","shell.execute_reply.started":"2024-12-17T07:39:41.328371Z","shell.execute_reply":"2024-12-17T07:39:57.038027Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 113ms/step\nAccuracy on training set: 0.732685297691373 %\n","output_type":"stream"}],"execution_count":49},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"12Cz-XVpN_tR","outputId":"534bf0cd-6a2b-40cc-cd90-14a7fb36ce5e","executionInfo":{"status":"ok","timestamp":1585230798741,"user_tz":-330,"elapsed":12710,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:39:57.039820Z","iopub.execute_input":"2024-12-17T07:39:57.040137Z","iopub.status.idle":"2024-12-17T07:40:00.543432Z","shell.execute_reply.started":"2024-12-17T07:39:57.040109Z","shell.execute_reply":"2024-12-17T07:40:00.542565Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 100ms/step\nAccuracy on validation set: 0.7110481586402266 %\n","output_type":"stream"}],"execution_count":50},{"cell_type":"markdown","source":"## 4. Changing size of convolutional filters","metadata":{"id":"zJjMRdqpW2Rv","colab_type":"text"}},{"cell_type":"code","source":"# change filter size for convolutional layer\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(25, (3, 3), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(Conv2D(50, (3, 3), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"9of5ypRihKOH","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:42:14.878370Z","iopub.execute_input":"2024-12-17T07:42:14.878721Z","iopub.status.idle":"2024-12-17T07:42:14.932566Z","shell.execute_reply.started":"2024-12-17T07:42:14.878691Z","shell.execute_reply":"2024-12-17T07:42:14.931877Z"}},"outputs":[],"execution_count":51},{"cell_type":"code","source":"model.summary()","metadata":{"colab_type":"code","id":"Ax6l1FB9XZ1I","outputId":"dd539302-5685-4d55-9ee6-e32d4adde3df","executionInfo":{"status":"ok","timestamp":1585230873007,"user_tz":-330,"elapsed":1050,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":364},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:42:16.578096Z","iopub.execute_input":"2024-12-17T07:42:16.578805Z","iopub.status.idle":"2024-12-17T07:42:16.596121Z","shell.execute_reply.started":"2024-12-17T07:42:16.578772Z","shell.execute_reply":"2024-12-17T07:42:16.595272Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_7\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_7\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_16 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m222\u001b[0m, \u001b[38;5;34m222\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │           \u001b[38;5;34m700\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_17 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m11,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_7 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m55\u001b[0m, \u001b[38;5;34m55\u001b[0m, \u001b[38;5;34m50\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_7 (\u001b[38;5;33mFlatten\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m151250\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_14 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │    \u001b[38;5;34m15,125,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_15 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_16 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">222</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">222</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │           <span style=\"color: #00af00; text-decoration-color: #00af00\">700</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_17 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">11,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">55</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">55</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">151250</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_14 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │    <span style=\"color: #00af00; text-decoration-color: #00af00\">15,125,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_15 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m15,137,201\u001b[0m (57.74 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">15,137,201</span> (57.74 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m15,137,201\u001b[0m (57.74 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">15,137,201</span> (57.74 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":52},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"colab_type":"code","id":"HtwUPK-tXZ1l","outputId":"800cffc9-1da0-4b77-ca6c-2f3f10a1d385","executionInfo":{"status":"ok","timestamp":1585230994913,"user_tz":-330,"elapsed":110980,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":382},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:42:19.378050Z","iopub.execute_input":"2024-12-17T07:42:19.378395Z","iopub.status.idle":"2024-12-17T07:43:47.148271Z","shell.execute_reply.started":"2024-12-17T07:42:19.378363Z","shell.execute_reply":"2024-12-17T07:43:47.147527Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:42:34.559163: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[128,25,222,222]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,25,3,3]{3,2,1,0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:42:35.770290: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.211303308s\nTrying algorithm eng0{} for conv (f32[128,25,222,222]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,25,3,3]{3,2,1,0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m12/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 269ms/step - accuracy: 0.5766 - loss: 0.6825","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:42:59.376023: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[110,25,222,222]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[50,25,3,3]{3,2,1,0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:43:00.148138: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.772223624s\nTrying algorithm eng0{} for conv (f32[110,25,222,222]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[50,25,3,3]{3,2,1,0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m51s\u001b[0m 2s/step - accuracy: 0.5774 - loss: 0.6818 - val_accuracy: 0.5609 - val_loss: 0.6708\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 282ms/step - accuracy: 0.5936 - loss: 0.6652 - val_accuracy: 0.5609 - val_loss: 0.6953\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 280ms/step - accuracy: 0.6088 - loss: 0.6572 - val_accuracy: 0.5963 - val_loss: 0.6497\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 279ms/step - accuracy: 0.6299 - loss: 0.6430 - val_accuracy: 0.6473 - val_loss: 0.6372\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 282ms/step - accuracy: 0.6438 - loss: 0.6377 - val_accuracy: 0.6105 - val_loss: 0.6401\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 280ms/step - accuracy: 0.6485 - loss: 0.6295 - val_accuracy: 0.6714 - val_loss: 0.6194\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 281ms/step - accuracy: 0.6754 - loss: 0.6143 - val_accuracy: 0.6756 - val_loss: 0.6129\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 283ms/step - accuracy: 0.6669 - loss: 0.6217 - val_accuracy: 0.6813 - val_loss: 0.6065\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 288ms/step - accuracy: 0.6662 - loss: 0.6172 - val_accuracy: 0.6615 - val_loss: 0.6087\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 287ms/step - accuracy: 0.6678 - loss: 0.6064 - val_accuracy: 0.6728 - val_loss: 0.6014\n","output_type":"stream"}],"execution_count":53},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"FbwZP8gFXZ1z","outputId":"146a6077-7abe-4519-c12f-dc8ceeab7451","executionInfo":{"status":"ok","timestamp":1585231030333,"user_tz":-330,"elapsed":7825,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:43:47.150382Z","iopub.execute_input":"2024-12-17T07:43:47.150767Z","iopub.status.idle":"2024-12-17T07:43:54.784351Z","shell.execute_reply.started":"2024-12-17T07:43:47.150728Z","shell.execute_reply":"2024-12-17T07:43:54.783330Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 46ms/step\nAccuracy on training set: 0.6859052247873633 %\n","output_type":"stream"}],"execution_count":54},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"7v6-0B9fXZ1-","outputId":"67f024b8-cca0-4fea-af6b-b6c1709c14cd","executionInfo":{"status":"ok","timestamp":1585231031353,"user_tz":-330,"elapsed":8811,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:43:54.785722Z","iopub.execute_input":"2024-12-17T07:43:54.786043Z","iopub.status.idle":"2024-12-17T07:43:56.943086Z","shell.execute_reply.started":"2024-12-17T07:43:54.786014Z","shell.execute_reply":"2024-12-17T07:43:56.942089Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 38ms/step\nAccuracy on validation set: 0.6728045325779037 %\n","output_type":"stream"}],"execution_count":55},{"cell_type":"markdown","source":"## 5. Changing pooling size","metadata":{"id":"MugTAmQ7XcLq","colab_type":"text"}},{"cell_type":"code","source":"# change pooling size\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(25, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(2, 2), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"colab_type":"code","id":"1TlepUXsX-Pt","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:44:51.738044Z","iopub.execute_input":"2024-12-17T07:44:51.738869Z","iopub.status.idle":"2024-12-17T07:44:51.798886Z","shell.execute_reply.started":"2024-12-17T07:44:51.738822Z","shell.execute_reply":"2024-12-17T07:44:51.798077Z"}},"outputs":[],"execution_count":57},{"cell_type":"code","source":"model.summary()","metadata":{"colab_type":"code","id":"u5c9xliOX-QN","outputId":"27084503-545e-41bb-f39f-2fb01f45b9dc","executionInfo":{"status":"ok","timestamp":1585231114304,"user_tz":-330,"elapsed":3143,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":364},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:44:54.797603Z","iopub.execute_input":"2024-12-17T07:44:54.797959Z","iopub.status.idle":"2024-12-17T07:44:54.815243Z","shell.execute_reply.started":"2024-12-17T07:44:54.797915Z","shell.execute_reply":"2024-12-17T07:44:54.814415Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_9\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_9\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_20 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │         \u001b[38;5;34m1,900\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_21 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m31,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_9 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m108\u001b[0m, \u001b[38;5;34m108\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_9 (\u001b[38;5;33mFlatten\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m583200\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_18 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │    \u001b[38;5;34m58,320,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_19 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_20 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,900</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_21 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">31,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">108</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">108</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">583200</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_18 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │    <span style=\"color: #00af00; text-decoration-color: #00af00\">58,320,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_19 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m58,353,401\u001b[0m (222.60 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">58,353,401</span> (222.60 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m58,353,401\u001b[0m (222.60 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">58,353,401</span> (222.60 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":58},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"colab_type":"code","id":"ObaTC2H-X-Qb","outputId":"0e0cc31e-a486-476a-d4df-777687905e38","executionInfo":{"status":"ok","timestamp":1585231293367,"user_tz":-330,"elapsed":153363,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":382},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:45:15.838433Z","iopub.execute_input":"2024-12-17T07:45:15.838781Z","iopub.status.idle":"2024-12-17T07:46:24.052663Z","shell.execute_reply.started":"2024-12-17T07:45:15.838750Z","shell.execute_reply":"2024-12-17T07:46:24.051431Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 783ms/step - accuracy: 0.5252 - loss: 0.7079 - val_accuracy: 0.5680 - val_loss: 0.6613\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 466ms/step - accuracy: 0.6116 - loss: 0.6542 - val_accuracy: 0.5382 - val_loss: 0.6832\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 472ms/step - accuracy: 0.6032 - loss: 0.6536 - val_accuracy: 0.5907 - val_loss: 0.6511\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 467ms/step - accuracy: 0.5846 - loss: 0.6822 - val_accuracy: 0.6785 - val_loss: 0.6144\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 453ms/step - accuracy: 0.6970 - loss: 0.6076 - val_accuracy: 0.6615 - val_loss: 0.6166\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 444ms/step - accuracy: 0.6614 - loss: 0.6110 - val_accuracy: 0.6671 - val_loss: 0.6138\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 438ms/step - accuracy: 0.7078 - loss: 0.5794 - val_accuracy: 0.6416 - val_loss: 0.6217\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 435ms/step - accuracy: 0.7009 - loss: 0.5995 - val_accuracy: 0.7068 - val_loss: 0.5791\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 431ms/step - accuracy: 0.7009 - loss: 0.5812 - val_accuracy: 0.7040 - val_loss: 0.5710\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 431ms/step - accuracy: 0.7442 - loss: 0.5480 - val_accuracy: 0.6969 - val_loss: 0.5731\n","output_type":"stream"}],"execution_count":59},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"_DOMRLPjX-Qq","outputId":"8020c83c-04c3-4390-cbae-7343a456fed7","executionInfo":{"status":"ok","timestamp":1585231379216,"user_tz":-330,"elapsed":7214,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:46:24.055053Z","iopub.execute_input":"2024-12-17T07:46:24.055428Z","iopub.status.idle":"2024-12-17T07:46:29.899823Z","shell.execute_reply.started":"2024-12-17T07:46:24.055387Z","shell.execute_reply":"2024-12-17T07:46:29.898847Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 42ms/step\nAccuracy on training set: 0.7417982989064399 %\n","output_type":"stream"}],"execution_count":60},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"2Nb8Gh-UX-Qz","outputId":"04dad127-2ff8-47d7-8e14-99d4bc802fe6","executionInfo":{"status":"ok","timestamp":1585231381041,"user_tz":-330,"elapsed":8662,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:46:29.900922Z","iopub.execute_input":"2024-12-17T07:46:29.901237Z","iopub.status.idle":"2024-12-17T07:46:32.436763Z","shell.execute_reply.started":"2024-12-17T07:46:29.901210Z","shell.execute_reply":"2024-12-17T07:46:32.435887Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 55ms/step\nAccuracy on validation set: 0.6968838526912181 %\n","output_type":"stream"}],"execution_count":61},{"cell_type":"markdown","source":"## 6. Changing padding technique","metadata":{"id":"sOCZcGB5YQSx","colab_type":"text"}},{"cell_type":"code","source":"# change padding technique\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(25, (5, 5), activation='relu', strides=(1, 1), padding='same'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='same'))\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"pyvT1mT8hKOY","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:46:59.938463Z","iopub.execute_input":"2024-12-17T07:46:59.938807Z","iopub.status.idle":"2024-12-17T07:47:00.000866Z","shell.execute_reply.started":"2024-12-17T07:46:59.938777Z","shell.execute_reply":"2024-12-17T07:46:59.999997Z"}},"outputs":[],"execution_count":63},{"cell_type":"code","source":"model.summary()","metadata":{"colab_type":"code","id":"cf-z6vIBYyzH","outputId":"4585e7f1-f78f-4ced-d956-645acc64e6bf","executionInfo":{"status":"ok","timestamp":1585232067935,"user_tz":-330,"elapsed":1811,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":364},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:47:05.297933Z","iopub.execute_input":"2024-12-17T07:47:05.298282Z","iopub.status.idle":"2024-12-17T07:47:05.316108Z","shell.execute_reply.started":"2024-12-17T07:47:05.298255Z","shell.execute_reply":"2024-12-17T07:47:05.315189Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_11\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_11\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_22 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │         \u001b[38;5;34m1,900\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_23 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m31,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_10 (\u001b[38;5;33mMaxPooling2D\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m50\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_10 (\u001b[38;5;33mFlatten\u001b[0m)            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m156800\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_20 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │    \u001b[38;5;34m15,680,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_21 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_22 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,900</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_23 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">31,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">156800</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_20 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │    <span style=\"color: #00af00; text-decoration-color: #00af00\">15,680,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_21 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m15,713,401\u001b[0m (59.94 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">15,713,401</span> (59.94 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m15,713,401\u001b[0m (59.94 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">15,713,401</span> (59.94 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":64},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"colab_type":"code","id":"FfeXcq8xYyzp","outputId":"8ff34394-a28d-487e-95af-c776531c92f8","executionInfo":{"status":"ok","timestamp":1585232234456,"user_tz":-330,"elapsed":132513,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":382},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:47:22.838084Z","iopub.execute_input":"2024-12-17T07:47:22.838437Z","iopub.status.idle":"2024-12-17T07:49:35.462707Z","shell.execute_reply.started":"2024-12-17T07:47:22.838407Z","shell.execute_reply":"2024-12-17T07:49:35.461763Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:47:35.753875: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=2,k3=0} for conv (f32[128,50,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:35.778547: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.024784334s\nTrying algorithm eng11{k2=2,k3=0} for conv (f32[128,50,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:41.163481: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:41.357470: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.194080091s\nTrying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:42.767102: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[128,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:43.580477: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.813477508s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[128,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:45.227207: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[128,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:49.449614: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 5.22251104s\nTrying algorithm eng0{} for conv (f32[128,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:55.415273: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=8,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:55.606819: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.191634153s\nTrying algorithm eng1{k2=8,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:56.607088: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=6,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:56.629816: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.022915488s\nTrying algorithm eng1{k2=6,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:58.612402: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=0,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:58.675167: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.062875714s\nTrying algorithm eng1{k2=0,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:59.675380: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:47:59.727854: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.05259229s\nTrying algorithm eng20{k2=0,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:00.728040: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:01.138762: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.410812539s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:02.138983: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:02.624358: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.485502338s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,25,224,224]{3,2,1,0}, f32[128,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m12/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 356ms/step - accuracy: 0.5107 - loss: 0.7345","output_type":"stream"},{"name":"stderr","text":"2024-12-17 07:48:21.893702: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[110,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:22.361713: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.468128684s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[110,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:23.977338: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[110,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:26.898472: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 3.921248597s\nTrying algorithm eng0{} for conv (f32[110,25,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,224,224]{3,2,1,0}, f32[50,25,5,5]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:36.811166: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,224,224]{3,2,1,0}, f32[110,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:36.980932: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.169863508s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,224,224]{3,2,1,0}, f32[110,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:37.981131: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,224,224]{3,2,1,0}, f32[110,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 07:48:38.207187: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.226163212s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,25,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,25,224,224]{3,2,1,0}, f32[110,50,224,224]{3,2,1,0}), window={size=5x5 pad=2_2x2_2}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 4s/step - accuracy: 0.5172 - loss: 0.7289 - val_accuracy: 0.5779 - val_loss: 0.6746\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 395ms/step - accuracy: 0.5751 - loss: 0.6704 - val_accuracy: 0.5666 - val_loss: 0.6626\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 398ms/step - accuracy: 0.6094 - loss: 0.6486 - val_accuracy: 0.5864 - val_loss: 0.6527\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 402ms/step - accuracy: 0.6223 - loss: 0.6465 - val_accuracy: 0.6558 - val_loss: 0.6295\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 407ms/step - accuracy: 0.6469 - loss: 0.6386 - val_accuracy: 0.6501 - val_loss: 0.6237\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 410ms/step - accuracy: 0.6188 - loss: 0.6415 - val_accuracy: 0.6275 - val_loss: 0.6350\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 415ms/step - accuracy: 0.6775 - loss: 0.6058 - val_accuracy: 0.6190 - val_loss: 0.6447\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 418ms/step - accuracy: 0.6285 - loss: 0.6368 - val_accuracy: 0.6799 - val_loss: 0.6022\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 418ms/step - accuracy: 0.6666 - loss: 0.6113 - val_accuracy: 0.6926 - val_loss: 0.5900\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 418ms/step - accuracy: 0.6578 - loss: 0.6184 - val_accuracy: 0.6997 - val_loss: 0.5868\n","output_type":"stream"}],"execution_count":65},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"FeCqlE73Yyz5","outputId":"e298744a-6b9f-4b96-8c90-a6bf8ae545f7","executionInfo":{"status":"ok","timestamp":1585232253276,"user_tz":-330,"elapsed":6236,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:49:35.464705Z","iopub.execute_input":"2024-12-17T07:49:35.465013Z","iopub.status.idle":"2024-12-17T07:49:44.662921Z","shell.execute_reply.started":"2024-12-17T07:49:35.464986Z","shell.execute_reply":"2024-12-17T07:49:44.662020Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 57ms/step\nAccuracy on training set: 0.7029161603888214 %\n","output_type":"stream"}],"execution_count":66},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"cO60-SfbYy0E","outputId":"aa856ded-adc7-4225-8c0f-d0d7277556d6","executionInfo":{"status":"ok","timestamp":1585232255549,"user_tz":-330,"elapsed":8067,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:49:44.664117Z","iopub.execute_input":"2024-12-17T07:49:44.664420Z","iopub.status.idle":"2024-12-17T07:49:47.066267Z","shell.execute_reply.started":"2024-12-17T07:49:44.664390Z","shell.execute_reply":"2024-12-17T07:49:47.065454Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 49ms/step\nAccuracy on validation set: 0.6997167138810199 %\n","output_type":"stream"}],"execution_count":67},{"cell_type":"markdown","source":"## 7. Changing stride","metadata":{"id":"gSYrnrv-Y3qZ","colab_type":"text"}},{"cell_type":"code","source":"# changing stride\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(25, (5, 5), activation='relu', strides=(2, 2), padding='valid'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(4, 4), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='sigmoid'))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer=\"sgd\", metrics=['accuracy'])","metadata":{"id":"9l6Qo3oehKOm","colab_type":"code","colab":{},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:49:56.118819Z","iopub.execute_input":"2024-12-17T07:49:56.119719Z","iopub.status.idle":"2024-12-17T07:49:56.177498Z","shell.execute_reply.started":"2024-12-17T07:49:56.119668Z","shell.execute_reply":"2024-12-17T07:49:56.176587Z"}},"outputs":[],"execution_count":68},{"cell_type":"code","source":"model.summary()","metadata":{"id":"tctf_89BhKO0","colab_type":"code","outputId":"50d22b6a-9aec-4755-8d8f-db05d17cf8fb","executionInfo":{"status":"ok","timestamp":1585232299373,"user_tz":-330,"elapsed":710,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":364},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:49:58.177906Z","iopub.execute_input":"2024-12-17T07:49:58.178281Z","iopub.status.idle":"2024-12-17T07:49:58.195684Z","shell.execute_reply.started":"2024-12-17T07:49:58.178249Z","shell.execute_reply":"2024-12-17T07:49:58.194992Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_12\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_12\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_24 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m110\u001b[0m, \u001b[38;5;34m110\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │         \u001b[38;5;34m1,900\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_25 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m106\u001b[0m, \u001b[38;5;34m106\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m31,300\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_11 (\u001b[38;5;33mMaxPooling2D\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m50\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_11 (\u001b[38;5;33mFlatten\u001b[0m)            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m33800\u001b[0m)          │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_22 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │     \u001b[38;5;34m3,380,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_23 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_24 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">110</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">110</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,900</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_25 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">106</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">106</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">31,300</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">33800</span>)          │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_22 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │     <span style=\"color: #00af00; text-decoration-color: #00af00\">3,380,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_23 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m3,413,401\u001b[0m (13.02 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">3,413,401</span> (13.02 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m3,413,401\u001b[0m (13.02 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">3,413,401</span> (13.02 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":69},{"cell_type":"code","source":"# training the model\nmodel_history = model.fit(X_train, y_train, epochs=10, batch_size=128,validation_data=(X_valid,y_valid))","metadata":{"colab_type":"code","id":"Nb5q7nbpZ5ua","outputId":"4deab1d9-6c44-4a1d-a6fc-f6d389ef4bd8","executionInfo":{"status":"ok","timestamp":1585232371336,"user_tz":-330,"elapsed":43149,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":382},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:50:02.537762Z","iopub.execute_input":"2024-12-17T07:50:02.538150Z","iopub.status.idle":"2024-12-17T07:50:44.949699Z","shell.execute_reply.started":"2024-12-17T07:50:02.538115Z","shell.execute_reply":"2024-12-17T07:50:44.948717Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 1s/step - accuracy: 0.4771 - loss: 0.7354 - val_accuracy: 0.5524 - val_loss: 0.6910\nEpoch 2/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 133ms/step - accuracy: 0.5653 - loss: 0.6831 - val_accuracy: 0.5609 - val_loss: 0.6915\nEpoch 3/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 133ms/step - accuracy: 0.5627 - loss: 0.6836 - val_accuracy: 0.5595 - val_loss: 0.6820\nEpoch 4/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 133ms/step - accuracy: 0.5980 - loss: 0.6648 - val_accuracy: 0.5595 - val_loss: 0.6753\nEpoch 5/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 133ms/step - accuracy: 0.5841 - loss: 0.6658 - val_accuracy: 0.5595 - val_loss: 0.6685\nEpoch 6/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 136ms/step - accuracy: 0.6022 - loss: 0.6547 - val_accuracy: 0.5708 - val_loss: 0.6603\nEpoch 7/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 133ms/step - accuracy: 0.6065 - loss: 0.6482 - val_accuracy: 0.6133 - val_loss: 0.6502\nEpoch 8/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 135ms/step - accuracy: 0.6340 - loss: 0.6441 - val_accuracy: 0.6289 - val_loss: 0.6417\nEpoch 9/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 135ms/step - accuracy: 0.6647 - loss: 0.6317 - val_accuracy: 0.6785 - val_loss: 0.6327\nEpoch 10/10\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 136ms/step - accuracy: 0.6745 - loss: 0.6266 - val_accuracy: 0.6728 - val_loss: 0.6237\n","output_type":"stream"}],"execution_count":70},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"hdsmGV3RZ5u_","outputId":"2b762973-7284-4aa5-ffec-782d4a941ba0","executionInfo":{"status":"ok","timestamp":1585232399777,"user_tz":-330,"elapsed":4762,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:50:44.951452Z","iopub.execute_input":"2024-12-17T07:50:44.951702Z","iopub.status.idle":"2024-12-17T07:50:50.351838Z","shell.execute_reply.started":"2024-12-17T07:50:44.951678Z","shell.execute_reply":"2024-12-17T07:50:50.350892Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 23ms/step\nAccuracy on training set: 0.6773997569866342 %\n","output_type":"stream"}],"execution_count":71},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"S2G90kqeZ5vQ","outputId":"d08dc5c7-bfb6-4125-f5ec-419435d20d8b","executionInfo":{"status":"ok","timestamp":1585232399781,"user_tz":-330,"elapsed":3628,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T07:50:50.353322Z","iopub.execute_input":"2024-12-17T07:50:50.353594Z","iopub.status.idle":"2024-12-17T07:50:52.169767Z","shell.execute_reply.started":"2024-12-17T07:50:50.353567Z","shell.execute_reply":"2024-12-17T07:50:52.168902Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 22ms/step\nAccuracy on validation set: 0.6728045325779037 %\n","output_type":"stream"}],"execution_count":72},{"cell_type":"markdown","source":"## Combining Hyperparameter tuning","metadata":{"id":"8TUZlzVvb7EW","colab_type":"text"}},{"cell_type":"code","source":"# defining the model architecture with maxpool layer\n\nmodel = Sequential()\n    \nmodel.add(InputLayer(shape=(224, 224, 3)))\n\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\n#model.add(MaxPool2D(pool_size=(2, 2), padding='valid'))\nmodel.add(Conv2D(50, (5, 5), activation='relu', strides=(1, 1), padding='valid'))\nmodel.add(MaxPool2D(pool_size=(2, 2), padding='valid'))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(units=100, activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(rate=0.6))\nmodel.add(Dense(units=100, activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(rate=0.6))\nmodel.add(Dense(units=1, activation='sigmoid'))\n\n# compiling the model\nmodel.compile(loss='binary_crossentropy', optimizer=\"adam\", metrics=['accuracy'])","metadata":{"id":"D5fIqq0ocA5r","colab_type":"code","outputId":"3bd9c917-0def-4cdb-c3b4-dee80e3e8cd7","executionInfo":{"status":"ok","timestamp":1585232531911,"user_tz":-330,"elapsed":1140,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":159},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:06:33.398110Z","iopub.execute_input":"2024-12-17T08:06:33.398682Z","iopub.status.idle":"2024-12-17T08:06:33.494987Z","shell.execute_reply.started":"2024-12-17T08:06:33.398647Z","shell.execute_reply":"2024-12-17T08:06:33.494321Z"}},"outputs":[],"execution_count":90},{"cell_type":"code","source":"model.summary()","metadata":{"colab_type":"code","id":"3-SYPJ7ccxO_","outputId":"2a8b2b33-1fc1-49ae-9c85-f7e2f17774d6","executionInfo":{"status":"ok","timestamp":1585232533269,"user_tz":-330,"elapsed":1048,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":573},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:06:35.477901Z","iopub.execute_input":"2024-12-17T08:06:35.478294Z","iopub.status.idle":"2024-12-17T08:06:35.499559Z","shell.execute_reply.started":"2024-12-17T08:06:35.478262Z","shell.execute_reply":"2024-12-17T08:06:35.498836Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_15\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_15\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_30 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m220\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │         \u001b[38;5;34m3,800\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_31 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m216\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │        \u001b[38;5;34m62,550\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_16 (\u001b[38;5;33mMaxPooling2D\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m108\u001b[0m, \u001b[38;5;34m108\u001b[0m, \u001b[38;5;34m50\u001b[0m)   │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_14 (\u001b[38;5;33mFlatten\u001b[0m)            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m583200\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_30 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │    \u001b[38;5;34m58,320,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_4           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │           \u001b[38;5;34m400\u001b[0m │\n│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_4 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_31 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │        \u001b[38;5;34m10,100\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_5           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │           \u001b[38;5;34m400\u001b[0m │\n│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_5 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_32 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d_30 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">220</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">3,800</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_31 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">216</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">62,550</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_16 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">108</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">108</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten_14 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">583200</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_30 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │    <span style=\"color: #00af00; text-decoration-color: #00af00\">58,320,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_4           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │           <span style=\"color: #00af00; text-decoration-color: #00af00\">400</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_31 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">10,100</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_5           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │           <span style=\"color: #00af00; text-decoration-color: #00af00\">400</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_32 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m58,397,451\u001b[0m (222.77 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">58,397,451</span> (222.77 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m58,397,051\u001b[0m (222.77 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">58,397,051</span> (222.77 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m400\u001b[0m (1.56 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">400</span> (1.56 KB)\n</pre>\n"},"metadata":{}}],"execution_count":91},{"cell_type":"code","source":"from keras.callbacks import ModelCheckpoint\npath_name=\"best_weight.keras\"\ncheckpoint=ModelCheckpoint(path_name,monitor='val_accuracy',verbose=1,save_best_only=True,mode='max')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:07:06.978402Z","iopub.execute_input":"2024-12-17T08:07:06.979092Z","iopub.status.idle":"2024-12-17T08:07:06.983313Z","shell.execute_reply.started":"2024-12-17T08:07:06.979059Z","shell.execute_reply":"2024-12-17T08:07:06.982348Z"}},"outputs":[],"execution_count":92},{"cell_type":"code","source":"# training the model for 100 epochs\nmodel_history = model.fit(X_train, y_train, epochs=50, batch_size=128,validation_data=(X_valid,y_valid),callbacks=[checkpoint])","metadata":{"colab_type":"code","id":"z4r5Ujo4cxPg","outputId":"08c4023a-8806-4550-8865-4aded9658c00","executionInfo":{"status":"ok","timestamp":1585233348857,"user_tz":-330,"elapsed":805264,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:07:11.064355Z","iopub.execute_input":"2024-12-17T08:07:11.064706Z","iopub.status.idle":"2024-12-17T08:15:20.070280Z","shell.execute_reply.started":"2024-12-17T08:07:11.064676Z","shell.execute_reply":"2024-12-17T08:15:20.069509Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/50\n","output_type":"stream"},{"name":"stderr","text":"2024-12-17 08:07:24.826628: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k4=1,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:24.947307: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.120799172s\nTrying algorithm eng20{k2=0,k4=1,k5=1,k6=0,k7=0,k19=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:25.947534: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=3,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:26.476782: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.529364022s\nTrying algorithm eng11{k2=3,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:27.477074: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng35{k2=4,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:27.975890: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.498991412s\nTrying algorithm eng35{k2=4,k3=0} for conv (f32[128,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:30.262263: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:30.471891: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.20973686s\nTrying algorithm eng26{k2=0,k4=2,k5=1,k6=0,k7=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:31.472096: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=0,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:31.894327: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.42232074s\nTrying algorithm eng25{k2=0,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:32.894564: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:33.456259: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.561816744s\nTrying algorithm eng25{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:34.456473: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=2,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:35.216706: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.76033635s\nTrying algorithm eng25{k2=2,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:36.216994: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:37.968318: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.751501629s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[128,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:41.279493: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:42.216561: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.937167431s\nTrying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:43.216814: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:44.102497: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.885823884s\nTrying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:45.102707: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:45.363169: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.260556472s\nTrying algorithm eng21{k2=2,k4=3,k5=0,k6=0,k7=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:46.363395: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:47.926706: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.563425157s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:48.926970: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:50.595662: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.668844651s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:51.595865: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:52.186146: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.590377575s\nTrying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:53.186371: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:53.607741: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.42148432s\nTrying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:54.607971: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:55.277454: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.669609638s\nTrying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:56.277673: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:07:56.921376: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.643814586s\nTrying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,50,220,220]{3,2,1,0}, f32[128,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m12/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 484ms/step - accuracy: 0.5413 - loss: 1.0191","output_type":"stream"},{"name":"stderr","text":"2024-12-17 08:08:12.648235: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=3,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:12.866384: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.218253973s\nTrying algorithm eng11{k2=3,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:13.866667: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng35{k2=4,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:14.066375: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.1998873s\nTrying algorithm eng35{k2=4,k3=0} for conv (f32[110,50,216,216]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}, f32[50]{0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:17.082206: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=0,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:17.204706: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.122590139s\nTrying algorithm eng25{k2=0,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:18.204928: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:18.401005: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.196189432s\nTrying algorithm eng25{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:19.401210: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng25{k2=2,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:19.682676: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.2815765s\nTrying algorithm eng25{k2=2,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:20.682873: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng2{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:21.858825: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.176051886s\nTrying algorithm eng2{k2=1,k3=0} for conv (f32[110,50,220,220]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,216,216]{3,2,1,0}, f32[50,50,5,5]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardInput\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:24.526154: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:25.100614: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.574553669s\nTrying algorithm eng1{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:26.100814: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:26.653038: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.552326349s\nTrying algorithm eng20{k2=0,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:28.651066: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:29.794751: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.143798786s\nTrying algorithm eng20{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:30.794974: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:32.047798: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.252942458s\nTrying algorithm eng1{k2=2,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:33.047995: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:33.382321: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.334419789s\nTrying algorithm eng1{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:34.382506: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:34.594667: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.212254056s\nTrying algorithm eng20{k2=8,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:35.594839: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:36.035174: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.4404187s\nTrying algorithm eng1{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:37.035460: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n2024-12-17 08:08:37.452973: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.417693732s\nTrying algorithm eng20{k2=6,k3=0} for conv (f32[50,50,5,5]{3,2,1,0}, u8[0]{0}) custom-call(f32[110,50,220,220]{3,2,1,0}, f32[110,50,216,216]{3,2,1,0}), window={size=5x5}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[],\"cudnn_conv_backend_config\":{\"conv_result_scale\":1,\"activation_mode\":\"kNone\",\"side_input_scale\":0,\"leakyrelu_alpha\":0}} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3s/step - accuracy: 0.5432 - loss: 1.0112   \nEpoch 1: val_accuracy improved from -inf to 0.67705, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m96s\u001b[0m 4s/step - accuracy: 0.5449 - loss: 1.0043 - val_accuracy: 0.6771 - val_loss: 1.2470\nEpoch 2/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 496ms/step - accuracy: 0.6471 - loss: 0.7935\nEpoch 2: val_accuracy improved from 0.67705 to 0.75071, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 846ms/step - accuracy: 0.6490 - loss: 0.7906 - val_accuracy: 0.7507 - val_loss: 0.5520\nEpoch 3/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 493ms/step - accuracy: 0.6946 - loss: 0.7123\nEpoch 3: val_accuracy did not improve from 0.75071\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 572ms/step - accuracy: 0.6947 - loss: 0.7116 - val_accuracy: 0.7422 - val_loss: 0.5293\nEpoch 4/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 496ms/step - accuracy: 0.7174 - loss: 0.6380\nEpoch 4: val_accuracy did not improve from 0.75071\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 573ms/step - accuracy: 0.7181 - loss: 0.6374 - val_accuracy: 0.7096 - val_loss: 0.8617\nEpoch 5/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 499ms/step - accuracy: 0.7517 - loss: 0.5476\nEpoch 5: val_accuracy did not improve from 0.75071\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 575ms/step - accuracy: 0.7525 - loss: 0.5454 - val_accuracy: 0.7337 - val_loss: 0.6505\nEpoch 6/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 497ms/step - accuracy: 0.7910 - loss: 0.4932\nEpoch 6: val_accuracy improved from 0.75071 to 0.78045, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 843ms/step - accuracy: 0.7913 - loss: 0.4922 - val_accuracy: 0.7805 - val_loss: 0.5440\nEpoch 7/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.8098 - loss: 0.4351\nEpoch 7: val_accuracy did not improve from 0.78045\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 564ms/step - accuracy: 0.8093 - loss: 0.4358 - val_accuracy: 0.4674 - val_loss: 1.8214\nEpoch 8/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 490ms/step - accuracy: 0.8298 - loss: 0.3884\nEpoch 8: val_accuracy did not improve from 0.78045\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 566ms/step - accuracy: 0.8298 - loss: 0.3880 - val_accuracy: 0.6813 - val_loss: 0.7773\nEpoch 9/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 492ms/step - accuracy: 0.8689 - loss: 0.3235\nEpoch 9: val_accuracy did not improve from 0.78045\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 568ms/step - accuracy: 0.8690 - loss: 0.3234 - val_accuracy: 0.7606 - val_loss: 0.5201\nEpoch 10/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 493ms/step - accuracy: 0.8791 - loss: 0.2849\nEpoch 10: val_accuracy did not improve from 0.78045\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 570ms/step - accuracy: 0.8799 - loss: 0.2834 - val_accuracy: 0.6105 - val_loss: 1.3175\nEpoch 11/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 494ms/step - accuracy: 0.9274 - loss: 0.2012\nEpoch 11: val_accuracy did not improve from 0.78045\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 571ms/step - accuracy: 0.9271 - loss: 0.2013 - val_accuracy: 0.7280 - val_loss: 0.7218\nEpoch 12/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 493ms/step - accuracy: 0.9415 - loss: 0.1584\nEpoch 12: val_accuracy improved from 0.78045 to 0.79603, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 847ms/step - accuracy: 0.9414 - loss: 0.1587 - val_accuracy: 0.7960 - val_loss: 0.5229\nEpoch 13/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 484ms/step - accuracy: 0.9686 - loss: 0.1271\nEpoch 13: val_accuracy did not improve from 0.79603\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 559ms/step - accuracy: 0.9682 - loss: 0.1275 - val_accuracy: 0.7380 - val_loss: 0.6572\nEpoch 14/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 488ms/step - accuracy: 0.9581 - loss: 0.1288\nEpoch 14: val_accuracy did not improve from 0.79603\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 564ms/step - accuracy: 0.9581 - loss: 0.1284 - val_accuracy: 0.6317 - val_loss: 1.1820\nEpoch 15/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 491ms/step - accuracy: 0.9727 - loss: 0.0995\nEpoch 15: val_accuracy did not improve from 0.79603\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 567ms/step - accuracy: 0.9727 - loss: 0.0993 - val_accuracy: 0.7606 - val_loss: 0.5519\nEpoch 16/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 494ms/step - accuracy: 0.9778 - loss: 0.0794\nEpoch 16: val_accuracy did not improve from 0.79603\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 572ms/step - accuracy: 0.9776 - loss: 0.0795 - val_accuracy: 0.6997 - val_loss: 0.9056\nEpoch 17/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 494ms/step - accuracy: 0.9748 - loss: 0.0828\nEpoch 17: val_accuracy did not improve from 0.79603\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 570ms/step - accuracy: 0.9748 - loss: 0.0831 - val_accuracy: 0.7918 - val_loss: 0.5290\nEpoch 18/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 494ms/step - accuracy: 0.9838 - loss: 0.0617\nEpoch 18: val_accuracy improved from 0.79603 to 0.82153, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 843ms/step - accuracy: 0.9835 - loss: 0.0621 - val_accuracy: 0.8215 - val_loss: 0.4463\nEpoch 19/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9749 - loss: 0.0755\nEpoch 19: val_accuracy did not improve from 0.82153\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 563ms/step - accuracy: 0.9751 - loss: 0.0754 - val_accuracy: 0.6402 - val_loss: 1.2890\nEpoch 20/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 489ms/step - accuracy: 0.9803 - loss: 0.0590\nEpoch 20: val_accuracy did not improve from 0.82153\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 567ms/step - accuracy: 0.9803 - loss: 0.0591 - val_accuracy: 0.8144 - val_loss: 0.5250\nEpoch 21/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 491ms/step - accuracy: 0.9869 - loss: 0.0604\nEpoch 21: val_accuracy did not improve from 0.82153\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 562ms/step - accuracy: 0.9868 - loss: 0.0605 - val_accuracy: 0.8059 - val_loss: 0.5152\nEpoch 22/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 491ms/step - accuracy: 0.9907 - loss: 0.0380\nEpoch 22: val_accuracy improved from 0.82153 to 0.83144, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 840ms/step - accuracy: 0.9906 - loss: 0.0382 - val_accuracy: 0.8314 - val_loss: 0.4408\nEpoch 23/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9937 - loss: 0.0341\nEpoch 23: val_accuracy improved from 0.83144 to 0.84419, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 835ms/step - accuracy: 0.9937 - loss: 0.0343 - val_accuracy: 0.8442 - val_loss: 0.4304\nEpoch 24/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 486ms/step - accuracy: 0.9918 - loss: 0.0314\nEpoch 24: val_accuracy did not improve from 0.84419\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 562ms/step - accuracy: 0.9916 - loss: 0.0319 - val_accuracy: 0.7210 - val_loss: 0.8594\nEpoch 25/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 491ms/step - accuracy: 0.9932 - loss: 0.0345\nEpoch 25: val_accuracy did not improve from 0.84419\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 568ms/step - accuracy: 0.9932 - loss: 0.0348 - val_accuracy: 0.7394 - val_loss: 0.7776\nEpoch 26/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 496ms/step - accuracy: 0.9926 - loss: 0.0275\nEpoch 26: val_accuracy improved from 0.84419 to 0.84561, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 845ms/step - accuracy: 0.9926 - loss: 0.0277 - val_accuracy: 0.8456 - val_loss: 0.4300\nEpoch 27/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 491ms/step - accuracy: 0.9964 - loss: 0.0209\nEpoch 27: val_accuracy did not improve from 0.84561\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 568ms/step - accuracy: 0.9961 - loss: 0.0217 - val_accuracy: 0.7436 - val_loss: 0.7692\nEpoch 28/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 493ms/step - accuracy: 0.9957 - loss: 0.0269\nEpoch 28: val_accuracy did not improve from 0.84561\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 570ms/step - accuracy: 0.9958 - loss: 0.0265 - val_accuracy: 0.7365 - val_loss: 0.8819\nEpoch 29/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 494ms/step - accuracy: 0.9923 - loss: 0.0299\nEpoch 29: val_accuracy improved from 0.84561 to 0.84703, saving model to best_weight.keras\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 843ms/step - accuracy: 0.9923 - loss: 0.0300 - val_accuracy: 0.8470 - val_loss: 0.4822\nEpoch 30/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9948 - loss: 0.0261\nEpoch 30: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 564ms/step - accuracy: 0.9948 - loss: 0.0260 - val_accuracy: 0.8088 - val_loss: 0.5754\nEpoch 31/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 490ms/step - accuracy: 0.9956 - loss: 0.0294\nEpoch 31: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 567ms/step - accuracy: 0.9956 - loss: 0.0292 - val_accuracy: 0.8003 - val_loss: 0.6521\nEpoch 32/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 492ms/step - accuracy: 0.9929 - loss: 0.0405\nEpoch 32: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 569ms/step - accuracy: 0.9929 - loss: 0.0401 - val_accuracy: 0.7337 - val_loss: 1.1528\nEpoch 33/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 495ms/step - accuracy: 0.9921 - loss: 0.0406\nEpoch 33: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 571ms/step - accuracy: 0.9922 - loss: 0.0397 - val_accuracy: 0.7975 - val_loss: 0.6738\nEpoch 34/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 495ms/step - accuracy: 0.9961 - loss: 0.0262\nEpoch 34: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 572ms/step - accuracy: 0.9959 - loss: 0.0271 - val_accuracy: 0.8102 - val_loss: 0.6584\nEpoch 35/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 494ms/step - accuracy: 0.9933 - loss: 0.0225\nEpoch 35: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 570ms/step - accuracy: 0.9932 - loss: 0.0232 - val_accuracy: 0.8385 - val_loss: 0.5446\nEpoch 36/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 491ms/step - accuracy: 0.9917 - loss: 0.0313\nEpoch 36: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 567ms/step - accuracy: 0.9917 - loss: 0.0311 - val_accuracy: 0.8343 - val_loss: 0.5585\nEpoch 37/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 491ms/step - accuracy: 0.9954 - loss: 0.0220\nEpoch 37: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 566ms/step - accuracy: 0.9954 - loss: 0.0223 - val_accuracy: 0.8442 - val_loss: 0.5811\nEpoch 38/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 488ms/step - accuracy: 0.9954 - loss: 0.0288\nEpoch 38: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 565ms/step - accuracy: 0.9955 - loss: 0.0284 - val_accuracy: 0.8201 - val_loss: 0.5824\nEpoch 39/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9975 - loss: 0.0141\nEpoch 39: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 563ms/step - accuracy: 0.9975 - loss: 0.0143 - val_accuracy: 0.6374 - val_loss: 1.9806\nEpoch 40/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9967 - loss: 0.0374\nEpoch 40: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 563ms/step - accuracy: 0.9967 - loss: 0.0368 - val_accuracy: 0.6119 - val_loss: 2.6326\nEpoch 41/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9942 - loss: 0.0426\nEpoch 41: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 562ms/step - accuracy: 0.9943 - loss: 0.0417 - val_accuracy: 0.8385 - val_loss: 0.4896\nEpoch 42/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 488ms/step - accuracy: 0.9967 - loss: 0.0158\nEpoch 42: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 564ms/step - accuracy: 0.9967 - loss: 0.0160 - val_accuracy: 0.8300 - val_loss: 0.5071\nEpoch 43/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 488ms/step - accuracy: 0.9962 - loss: 0.0243\nEpoch 43: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 564ms/step - accuracy: 0.9961 - loss: 0.0247 - val_accuracy: 0.7975 - val_loss: 0.6635\nEpoch 44/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 486ms/step - accuracy: 0.9943 - loss: 0.0202\nEpoch 44: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 564ms/step - accuracy: 0.9943 - loss: 0.0204 - val_accuracy: 0.8244 - val_loss: 0.5904\nEpoch 45/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9965 - loss: 0.0143\nEpoch 45: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 563ms/step - accuracy: 0.9965 - loss: 0.0144 - val_accuracy: 0.8017 - val_loss: 0.7477\nEpoch 46/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 488ms/step - accuracy: 0.9937 - loss: 0.0351\nEpoch 46: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 564ms/step - accuracy: 0.9937 - loss: 0.0345 - val_accuracy: 0.8130 - val_loss: 0.6650\nEpoch 47/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 488ms/step - accuracy: 0.9946 - loss: 0.0290\nEpoch 47: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 563ms/step - accuracy: 0.9946 - loss: 0.0295 - val_accuracy: 0.8187 - val_loss: 0.6346\nEpoch 48/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 489ms/step - accuracy: 0.9943 - loss: 0.0361\nEpoch 48: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 565ms/step - accuracy: 0.9942 - loss: 0.0367 - val_accuracy: 0.8144 - val_loss: 0.7481\nEpoch 49/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 490ms/step - accuracy: 0.9950 - loss: 0.0224\nEpoch 49: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 566ms/step - accuracy: 0.9950 - loss: 0.0231 - val_accuracy: 0.8286 - val_loss: 0.6397\nEpoch 50/50\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 489ms/step - accuracy: 0.9928 - loss: 0.0287\nEpoch 50: val_accuracy did not improve from 0.84703\n\u001b[1m13/13\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 565ms/step - accuracy: 0.9928 - loss: 0.0293 - val_accuracy: 0.8017 - val_loss: 0.8197\n","output_type":"stream"}],"execution_count":93},{"cell_type":"code","source":"model.load_weights(\"best_weight.keras\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:16:41.618675Z","iopub.execute_input":"2024-12-17T08:16:41.619048Z","iopub.status.idle":"2024-12-17T08:16:50.085229Z","shell.execute_reply.started":"2024-12-17T08:16:41.619014Z","shell.execute_reply":"2024-12-17T08:16:50.084188Z"}},"outputs":[],"execution_count":95},{"cell_type":"code","source":"# accuracy on training set\nprint('Accuracy on training set:', accuracy_score(y_train, np.where(model.predict(X_train)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"lTfk3UlwcxPt","outputId":"b47f1bbb-610d-4f28-e95f-34d1ae51b45d","executionInfo":{"status":"ok","timestamp":1585233691490,"user_tz":-330,"elapsed":5029,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:16:50.087046Z","iopub.execute_input":"2024-12-17T08:16:50.087449Z","iopub.status.idle":"2024-12-17T08:17:00.767087Z","shell.execute_reply.started":"2024-12-17T08:16:50.087410Z","shell.execute_reply":"2024-12-17T08:17:00.765798Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 77ms/step\nAccuracy on training set: 0.9975698663426489 %\n","output_type":"stream"}],"execution_count":96},{"cell_type":"code","source":"# accuracy on validation set\nprint('Accuracy on validation set:', accuracy_score(y_valid, np.where(model.predict(X_valid)>0.5,1,0)), '%')","metadata":{"colab_type":"code","id":"7sLMzomDcxP4","outputId":"cfdf4fb3-67f3-48d9-fe67-0d4b23ce5891","executionInfo":{"status":"ok","timestamp":1585233692737,"user_tz":-330,"elapsed":5619,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":34},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:17:00.768403Z","iopub.execute_input":"2024-12-17T08:17:00.768904Z","iopub.status.idle":"2024-12-17T08:17:03.558267Z","shell.execute_reply.started":"2024-12-17T08:17:00.768862Z","shell.execute_reply":"2024-12-17T08:17:03.556961Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 66ms/step\nAccuracy on validation set: 0.8470254957507082 %\n","output_type":"stream"}],"execution_count":97},{"cell_type":"code","source":"# summarize history for loss\nplt.plot(model_history.history['loss'])\nplt.plot(model_history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'validation'], loc='upper left')\nplt.show()","metadata":{"colab_type":"code","id":"icyVeIn0eIPG","outputId":"5e0ac31a-c136-467b-966e-8266248dcfd0","executionInfo":{"status":"ok","timestamp":1585233719536,"user_tz":-330,"elapsed":2108,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":295},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:17:03.559957Z","iopub.execute_input":"2024-12-17T08:17:03.560230Z","iopub.status.idle":"2024-12-17T08:17:03.732377Z","shell.execute_reply.started":"2024-12-17T08:17:03.560205Z","shell.execute_reply":"2024-12-17T08:17:03.731527Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAjcAAAHHCAYAAABDUnkqAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAACAwklEQVR4nO3dd3hUVfoH8O+dSWbSE0IqJEAEjIASOgYsqCiKItjAtsquZVWwsawr7tp/KzbsKLoW7FgBFRtSBUG6FOktlBRCSO8z9/fHmTslJJMpd9qd7+d58szN5M7MYRJm3nnPe94jybIsg4iIiEgjdIEeABEREZGaGNwQERGRpjC4ISIiIk1hcENERESawuCGiIiINIXBDREREWkKgxsiIiLSFAY3REREpCkMboiIiEhTGNwQUdA7cOAAJEnC7Nmz3b7t0qVLIUkSli5d6vS82bNnQ5IkHDhwwKMxElHwYHBDREREmsLghoiIiDSFwQ0RERFpCoMbImrXY489BkmSsGvXLtx4441ITExEamoqHn74YciyjEOHDmHs2LFISEhARkYGZsyYcdJ9lJSU4JZbbkF6ejqioqKQl5eH999//6TzysvLMXHiRCQmJiIpKQk333wzysvLWx3Xjh07cPXVVyM5ORlRUVEYNGgQvvnmG1X/7a+//jr69OkDo9GITp06YdKkSSeNZ/fu3bjqqquQkZGBqKgoZGVl4dprr0VFRYX1nIULF+Kss85CUlIS4uLikJubi4ceekjVsRKREBHoARBR6JgwYQJ69eqFp59+GgsWLMD//d//ITk5GW+++SbOP/98PPPMM/j4448xdepUDB48GOeccw4AoK6uDiNGjMCePXswefJk5OTk4IsvvsDEiRNRXl6Oe++9FwAgyzLGjh2LFStW4I477kCvXr0wd+5c3HzzzSeNZdu2bRg+fDg6d+6MBx98ELGxsfj8888xbtw4fPXVV7jiiiu8/vc+9thjePzxxzFy5Ejceeed2LlzJ9544w2sXbsWK1euRGRkJBobGzFq1Cg0NDTg7rvvRkZGBo4cOYLvvvsO5eXlSExMxLZt23DZZZehb9++eOKJJ2A0GrFnzx6sXLnS6zESUStkIqJ2PProozIA+fbbb7de19zcLGdlZcmSJMlPP/209foTJ07I0dHR8s0332y97qWXXpIByB999JH1usbGRjk/P1+Oi4uTKysrZVmW5Xnz5skA5Geffdbhcc4++2wZgPzee+9Zr7/gggvkM844Q66vr7deZzab5WHDhsk9e/a0XrdkyRIZgLxkyRKn/8b33ntPBiDv379flmVZLikpkQ0Gg3zRRRfJJpPJet5rr70mA5DfffddWZZleePGjTIA+Ysvvmjzvl988UUZgHzs2DGnYyAidXBaiohcduutt1qP9Xo9Bg0aBFmWccstt1ivT0pKQm5uLvbt22e97vvvv0dGRgauu+4663WRkZG45557UF1djWXLllnPi4iIwJ133unwOHfffbfDOMrKyrB48WKMHz8eVVVVKC0tRWlpKY4fP45Ro0Zh9+7dOHLkiFf/1l9++QWNjY247777oNPZXipvu+02JCQkYMGCBQCAxMREAMBPP/2E2traVu8rKSkJADB//nyYzWavxkVE7WNwQ0Qu69Kli8P3iYmJiIqKQkpKyknXnzhxwvr9wYMH0bNnT4cgAQB69epl/blymZmZibi4OIfzcnNzHb7fs2cPZFnGww8/jNTUVIevRx99FICo8fGGMqaWj20wGHDKKadYf56Tk4MpU6bg7bffRkpKCkaNGoWZM2c61NtMmDABw4cPx6233or09HRce+21+PzzzxnoEPkIa26IyGV6vd6l6wBRP+MrSlAwdepUjBo1qtVzevTo4bPHb2nGjBmYOHEi5s+fj59//hn33HMPpk+fjtWrVyMrKwvR0dFYvnw5lixZggULFuDHH3/EZ599hvPPPx8///xzm88hEXmGmRsi8rmuXbti9+7dJ2UqduzYYf25cllYWIjq6mqH83bu3Onw/SmnnAJATG2NHDmy1a/4+Hivx9zaYzc2NmL//v3WnyvOOOMM/Oc//8Hy5cvx66+/4siRI5g1a5b15zqdDhdccAFeeOEF/Pnnn/jvf/+LxYsXY8mSJV6Nk4hOxuCGiHxu9OjRKCoqwmeffWa9rrm5Ga+++iri4uJw7rnnWs9rbm7GG2+8YT3PZDLh1Vdfdbi/tLQ0jBgxAm+++SYKCwtPerxjx455PeaRI0fCYDDglVdecchCvfPOO6ioqMCll14KAKisrERzc7PDbc844wzodDo0NDQAEDVCLfXr1w8ArOcQkXo4LUVEPnf77bfjzTffxMSJE7F+/Xp069YNX375JVauXImXXnrJmmUZM2YMhg8fjgcffBAHDhxA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d999GD58OE4//fQ2z8vNzcW7776L+fPn46OPPoLZbMawYcNw+PDhVs+fPn06EhMTrV/Z2dm++ieEtG7duuGll16yfi9JEubNm9fm+QcOHIAkSdi0aZNXj6vW/RAROVB63CR0BiKjxTF3Bg8bQbPd9aRJk7B161asWLHC6Xn5+fnIz7e10x42bBh69eqFN998E08++eRJ50+bNg1Tpkyxfl9ZWckAxwWFhYXo0KGDqvc5ceJElJeXOwRN2dnZKCwsREpKiqqPRURhTqm3Sehku447g4eNoAhuJk+ejO+++w7Lly9HVlaWW7eNjIxE//79sWfPnlZ/bjQaYTQa1RhmWPFXTZNer2f9FBGpr0LJ3HQCasvEcRMzN+EioNNSsixj8uTJmDt3LhYvXoycnBy378NkMmHLli3IzMz0wQhDw1tvvYVOnTrBbDY7XD927Fj87W9/w969ezF27Fikp6cjLi4OgwcPxi+//OL0PltOS61Zswb9+/dHVFQUBg0ahI0bNzqcbzKZcMsttyAnJwfR0dHIzc3Fyy+/bP35Y489hvfffx/z58+3LuFfunRpq9NSy5Ytw5AhQ2A0GpGZmYkHH3wQzc3N1p+PGDEC99xzDx544AEkJycjIyMDjz32mPtPHBFpV6vTUszchIuAZm4mTZqETz75BPPnz0d8fDyKiooAAImJiYiOFn+MN910Ezp37ozp06cDAJ544gmceeaZ6NGjB8rLy/Hcc8/h4MGDuPXWW30zSFkGmmp9c9/tiYwBJKnd06655hrcfffdWLJkCS644AIAQFlZGX788Ud8//33qK6uxujRo/Hf//4XRqMRH3zwAcaMGYOdO3eiS5cu7d5/dXU1LrvsMlx44YX46KOPsH//ftx7770O55jNZmRlZeGLL75Ax44d8dtvv+H2229HZmYmxo8fj6lTp2L79u2orKzEe++9B0AUjh896tiH4siRIxg9ejQmTpyIDz74ADt27MBtt92GqKgohwDm/fffx5QpU/D7779j1apVmDhxIoYPH44LL7yw3X8PEYUB+2mpikPimDU3YSOgwc0bb7wBQHwSt/fee+9h4sSJAICCggLo7LaoP3HiBG677TYUFRWhQ4cOGDhwIH777Tf07t3bN4NsqgWe6tT+eb7w0FHAENvuaR06dMAll1yCTz75xBrcfPnll0hJScF5550HnU6HvLw8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"},"metadata":{}}],"execution_count":98},{"cell_type":"code","source":"# summarize history for accuracy\nplt.plot(model_history.history['accuracy'])\nplt.plot(model_history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'validation'], loc='upper left')\nplt.show()","metadata":{"colab_type":"code","id":"oYJOcjiNeIPu","outputId":"6ac13cf7-5adc-4c82-8542-c0f971893c8d","executionInfo":{"status":"ok","timestamp":1585233721162,"user_tz":-330,"elapsed":1964,"user":{"displayName":"Aishwarya Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgeJwfn4BdBDCAplWi_kdtB9FRssOpXO7T_aMgg=s64","userId":"01105858832371513140"}},"colab":{"base_uri":"https://localhost:8080/","height":295},"trusted":true,"execution":{"iopub.status.busy":"2024-12-17T08:17:03.733391Z","iopub.execute_input":"2024-12-17T08:17:03.733667Z","iopub.status.idle":"2024-12-17T08:17:03.909063Z","shell.execute_reply.started":"2024-12-17T08:17:03.733641Z","shell.execute_reply":"2024-12-17T08:17:03.908067Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":99},{"cell_type":"markdown","source":"**By hyperparameter tuning we were able to get the validation accuracy from ~71% to ~84%**","metadata":{"id":"wQ-rpxow7gzJ","colab_type":"code","colab":{}}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}